initialize(): creating empty data file for `analysis'.
initialize(): creating empty data file for `phenomenon'.
initialize(): creating empty data file for `parameter'.
initialize(): creating empty data file for `set'.
initialize(): creating empty data file for `item-phenomenon'.
initialize(): creating empty data file for `item-set'.
initialize(): creating empty data file for `run'.
initialize(): creating empty data file for `parse'.
initialize(): creating empty data file for `result'.
initialize(): creating empty data file for `rule'.
initialize(): creating empty data file for `output'.
initialize(): creating empty data file for `edge'.
initialize(): creating empty data file for `tree'.
initialize(): creating empty data file for `decision'.
initialize(): creating empty data file for `preference'.
initialize(): creating empty data file for `update'.
initialize(): creating empty data file for `fold'.
initialize(): creating empty data file for `score'.
rpus (All Sections) (`jh'): 2146 items;
  LOGON Jotunheimen Corpus (Section 0) (`jh0'): 88 items;
  LOGON Jotunheimen Corpus (Section 1) (`jh1'): 451 items;
  LOGON Jotunheimen Corpus (Section 2) (`jh2'): 436 items;
  LOGON Jotunheimen Corpus (Section 3) (`jh3'): 481 items;
  LOGON Jotunheimen Corpus (Section 4) (`jh4'): 535 items;
  LOGON Jotunheimen Corpus (Section 5) (`jh5'): 155 items;
  LOGON Jotunheimen Corpus (Evaluation Sub-Set) (`jhe'): 84 items;
  LOGON Jotunheimen Test Corpus (Known-Vocabulary) (`jhk'): 84 items;
  LOGON Jotunheimen Test Corpus (Unknown-Vocabulary) (`jhu'): 98 items;
  HandOn Regression Sample (5 to 15 Words) (`mark'): 500 items;
  Norwegian MRS Test Suite (`mrs'): 107 items;
  LOGON PSTG Corpus (16 to 20 Words) (`nut'): 224 items;
  LOGON Preikestolen Corpus (`ps'): 322 items;
  LOGON Preikestolen Corpus (Evaluation Sub-Set) (`pse'): 15 items;
  LOGON Preikestolen Test Corpus (Known-Vocabulary) (`psk'): 15 items;
  LOGON Preikestolen Test Corpus (Unknown-Vocabulary) (`psu'): 15 items;
  LOGON PSTG Corpus (1 to 10 Words) (`raak'): 613 items;
  LOGON Jotunheimen Corpus (11 to 15 Words) (`sti'): 412 items;
  LOGON Turglede Corpus (Original) (`tg'): 1024 items;
  LOGON Turglede Corpus (Left-Over) (`tg+'): 1892 items;
  LOGON Turglede Corpus (Evaluation Sub-Set) (`tge'): 45 items;
  LOGON Turglede Test Corpus (Known-Vocabulary) (`tgk'): 45 items;
  LOGON Turglede Test Corpus (Unknown-Vocabulary) (`tgu'): 45 items;
  LOGON Jotunheimen Corpus (16 to 20 Words) (`topp'): 348 items;
  LOGON PSTG Corpus (11 to 15 Words) (`traakk'): 341 items;
  First LOGON Development Corpus (`tur'): 104 items;
  LOGON Unknown Syntactic Test Suite (`usts'): 148 items;
  LOGON Jotunheimen Corpus (1 to 10 Words) (`vei'): 981 items;


[changing package from "COMMON-LISP-USER" to "TSDB"]
TSNLP(1): NIL
TSNLP(2): NIL
TSNLP(3): T
TSNLP(4): "/home/antske/delphin/matrix/trunk/gmcs/regression_tests//home/"
TSNLP(5): 
  Cree: Plains Cree (sfd dissertation) (`Cree'): 106 items;
  Dyirbal: Dyirbal (sfd dissertation) (`Dyirbal'): 44 items;
  Finnish: Finnish test for morphotactics (`Finnish'): 36 items;
  Fore: Fore (sfd dissertation) (`Fore'): 76 items;
  German: German (sfd dissertation) (`German'): 90 items;
  Hindi: Hindi (sfd dissertation) (`Hindi'): 32 items;
  Sahaptin: Sahaptin (sfd dissertation) (`Sahaptin'): 6165 items;
  Sahaptin-short: Sahaptin, shorter version (sfd dissertation) (`Sahaptin-short'): 894 items;
  Slave: Slave test for morphotactics (`Slave'): 106 items;
  Tagalog: Tagalog (sfd dissertation) (`Tagalog'): 29 items;
  Zulu: Zulu test for morphotactics (`Zulu'): 46 items;
  Subject dropping for all verbs with a marker left optionally for both dropped and overt subjects (`all-subj-drop-wth-opt-marker'): 47 items;
  All subject droppiuired marker for both dropped and overt subjects.  No object dropping. (`all-subj-drop-wth-req-marker'): 46 items;
  Object dropping is allowed for all verb types a marker is not permitted with dropped arguments and is optional for overt. (`arg-opt-all-comps-drop-marker-np-wth-drop-opt-wthout'): 8 items;
  Object dropping is allowed for all verb types.  A marker is required with overt arguments and not permitted with dropped arguments. (`arg-opt-all-comps-drop-marker-np-wth-drop-opt-wthout'): 8 items;
  Object dropping is allowed for all verb types and a marker is optional if the object is dropped and not permitted if it is overt. (`arg-opt-all-comps-drop-marker-opt-wth-drop-np-wthout'): 8 items;
  Object dropping is allowed for verb types and object marking is optional when for dropped and overt objects. (`arg-opt-all-comps-drop-marker-opt-wth-drop-opt-wthout'): 8 items;
  Object dropping for all verb types.  Marker is optional for dropped objects and required for overt objects. (`arg-opt-all-comps-drop-marker-opt-wth-drop-req-wthout'): 8 items;
  Object dropping is allowed for all verbs and an object marker is required when the object is dropped and not permitted with an overt object. (`arg-opt-all-comps-drop-marker-req-wth-drop-np-wthout'): 12 items;
  Object dropping allowed for all verbs.  Marker is required for dropping and optional otherwise. (`arg-opt-all-comps-drop-marker-req-wth-drop-opt-wthout'): 12 items;
  Object dropping is allowed for all verbs and a marker is required when objects are dropped and when they are not. (`arg-opt-all-comps-drop-marker-req-wth-drop-req-wthout'): 12 items;
  All complements can be dropped. No marker. (`arg-opt-all-comps-drop-wth-no-marker'): 13 items;
  arg-opt-all-subj-drop-marker-np-wth-drop-opt-wthout: Subject dropping is allowed for all verb types.  A marker is not permitted with a dropped subject and is optional with an overt one.  Object dropping is not allowed. (`arg-opt-all-subj-drop-marker-np-wth-drop-opt-wthout'): 10 items;
  arg-opt-all-subj-drop-marker-np-wth-drop-req-wthout: Subject dropping for all verb types. Marker not permitted with dropped subj and req with overt arg. (`arg-opt-all-subj-drop-marker-np-wth-drop-req-wthout'): 8 items;
  arg-opt-all-subj-drop-marker-opt-wth-drop-np-wthout: Subject dropping for all verb types. Marker optional with drop and not permitted with overt subj. (`arg-opt-all-subj-drop-marker-opt-wth-drop-np-wthout'): 8 items;
  arg-opt-all-subj-drop-marker-opt-wth-drop-opt-wthout: Subject dropping allowed for al verb types. Marker optional for both dropped and overt subjects. (`arg-opt-all-subj-drop-marker-opt-wth-drop-opt-wthout'): 8 items;
  arg-opt-all-subj-drop-marker-opt-wth-drop-req-wthout: Subject dropping allowed for all verb types. Marker opt for dropped subj and req for overt subj. (`arg-opt-all-subj-drop-marker-opt-wth-drop-req-wthout'): 8 items;
  arg-opt-all-subj-drop-marker-req-wth-drop-np-wthout: Subject dropping allowed for all verb types. Marker required for drop and not permitted with overt subj. (`arg-opt-all-subj-drop-marker-req-wth-drop-np-wthout'): 10 items;
  arg-opt-all-subj-drop-marker-req-wth-drop-opt-wthout: Subject dropping allowed for all verb types.  Marker req for drop and opt for overt subj. (`arg-opt-all-subj-drop-marker-req-wth-drop-opt-wthout'): 12 items;
  arg-opt-all-subj-drop-marker-req-wth-drop-req-wthout: Subject dropping for all verb types. Marker required for both dropped and overt subjects (`arg-opt-all-subj-drop-marker-req-wth-drop-req-wthout'): 12 items;
  arg-opt-lex-cntxt-2feat-subj-drop-marker-req-wth-drop-req-wthout: Subject dropping only in one context with multiple features.  One specified on the verb.  One on the subj. (`arg-opt-lex-cntxt-2feat-subj-drop-marker-req-wth-drop-req-wthout'): 42 items;
  arg-opt-lex-cntxt-subj-drop-marker-req-wth-drop-req-wthout: Subject dropping according to one context with one feature specified on the verb. (`arg-opt-lex-cntxt-subj-drop-marker-req-wth-drop-req-wthout'): 40 items;
  arg-opt-lex-comps-drop-marker-np-wth-drop-opt-wthout: Markers are not permitted if the object is dropped and optional if it is overt.  Lexically Ba[D[D[A[D (`arg-opt-lex-comps-drop-marker-np-wth-drop-opt-wthout'): 8 items;
  arg-opt-lex-comps-drop-marker-np-wth-drop-req-wthout: Marker not permitted with dropped object and required with an overt object. Lexically based. (`arg-opt-lex-comps-drop-marker-np-wth-drop-req-wthout'): 8 items;
  arg-opt-lex-comps-drop-marker-opt-wth-drop-np-wthout: markerop optional with dropped object and not permitted with overt object. lexically based (`arg-opt-lex-comps-drop-marker-opt-wth-drop-np-wthout'): 8 items;
  arg-opt-lex-comps-drop-marker-opt-wth-drop-opt-wthout: marker is optional for both dropped and overt objects.  lexically based (`arg-opt-lex-comps-drop-marker-opt-wth-drop-opt-wthout'): 8 items;
  arg-opt-lex-comps-drop-marker-opt-wth-drop-req-wthout: marker is optional with a dropped object and required with an overt object. lecixically based (`arg-opt-lex-comps-drop-marker-opt-wth-drop-req-wthout'): 8 items;
  arg-opt-lex-comps-drop-marker-req-wth-drop-np-wthout: marker is required wihen an object is dropped and not permitted with an overt object. lexically based (`arg-opt-lex-comps-drop-marker-req-wth-drop-np-wthout'): 12 items;
  arg-opt-lex-comps-drop-marker-req-wth-drop-opt-wthout: marker is required with an ovdropped object and optional with an overt object. lexically based (`arg-opt-lex-comps-drop-marker-req-wth-drop-opt-wthout'): 12 items;
  arg-opt-lex-comps-drop-marker-req-wth-drop-req-wthout: marker is required with a dropped object and required with an overt object. lexically based. (`arg-opt-lex-comps-drop-marker-req-wth-drop-req-wthout'): 12 items;
  arg-opt-lex-comps-drop-np-wth-drop-np-wthout: slexically based complement dropping.  marker is not permitted for dropped or overt objects (`arg-opt-lex-comps-drop-np-wth-drop-np-wthout'): 13 items;
  arg-opt-lex-subj-drop-marker-np-wth-drop-opt-wthout: subject dropping.lexically based. marker is not permitted when subject is dropped and is optional when it is overt (`arg-opt-lex-subj-drop-marker-np-wth-drop-opt-wthout'): 10 items;
  arg-opt-lex-subj-drop-marker-np-wth-drop-req-wthout: lexically based subject dropping. subject marker is re not permitted with an dropped subject and required with an overt subject. (`arg-opt-lex-subj-drop-marker-np-wth-drop-req-wthout'): 8 items;
  arg-opt-lex-subj-drop-marker-opt-wth-drop-np-wthout: lexically based subject dropping. maker is optional with drop and onot permitted with overt subject (`arg-opt-lex-subj-drop-marker-opt-wth-drop-np-wthout'): 8 items;
  arg-opt-lex-subj-drop-marker-opt-wth-drop-opt-wthout: lexically based subject drop. marker is optional witha dropped subject and optiona l with an overt subject (`arg-opt-lex-subj-drop-marker-opt-wth-drop-opt-wthout'): 8 items;
  arg-opt-lex-subj-drop-marker-opt-wth-drop-req-wthout: lexically based subject dropping. marker is required with a dropped subject and required with an overt subject (`arg-opt-lex-subj-drop-marker-opt-wth-drop-req-wthout'): 8 items;
  arg-opt-lex-subj-drop-marker-req-wth-drop-np-wthout: lexically based subject dropping. mmareker is required with a dropped subject and not permitted with an overt subject (`arg-opt-lex-subj-drop-marker-req-wth-drop-np-wthout'): 10 items;
  arg-opt-lex-subj-drop-marker-req-wth-drop-opt-wthout: lexically based subject dropping. marker is required for a dropped subject and optinal for a overt subject (`arg-opt-lex-subj-drop-marker-req-wth-drop-opt-wthout'): 12 items;
  arg-opt-lex-subj-drop-marker-req-wth-drop-req-wthout: Lexically based subject dropping. Marker required for dropped and overt subjs. (`arg-opt-lex-subj-drop-marker-req-wth-drop-req-wthout'): 38 items;
  arg-opt-lex-subj-drop-no-marker: Lexical based subject dropping. No marker. (`arg-opt-lex-subj-drop-no-marker'): 19 items;
  aux-assigns-subj-case-vp: grammar tests case restrictions imposed by auxiliary: here the auxiliary aentence (`aux-assigns-subj-case-vp'): 18 items;
  aux-f-vpcomp-nfconst-formfeat: finite auxes with nf vp compleof the nf comp is constrained - level 2 test (inflection, no t&a features) (`aux-f-vpcomp-nfconst-formfeat'): 16 items;
  aux-s-f-noinfl: two aux, finite sentential compelement, no inflection, level1 test (`aux-s-f-noinfl'): 8 items;
  aux-v-f-noinfl: two aux, finite v vomp, no inflection, level 1 test (`aux-v-f-noinfl'): 8 items;
  aux-vp-f-noinfl: two aux, finite vp comp, no inflection, level 1 test (`aux-vp-f-noinfl'): 8 items;
  auxcomp-feature-engstative-vp-1013: testing verb class feature stative and aux constrained to nonstative (`auxcomp-feature-engstative-vp-1013'): 4 items;
  auxcomp-markfeature-vp-1015: testing KEYS.KEY mhat is being used to distinguish etre and avoir type auxiliary verb classes (`auxcomp-markfeature-vp-1015'): 4 items;
  auxfeatures: testing features on auxiliary verb (`auxfeatures'): 14 items;
  auxfeatures-onlyformmarked: testing features on the auxiliaryFORM marked on the complement verb (`auxfeatures-onlyformmarked'): 6 items;
  auxten-vpcompnfasp-tafeat: tensed auxilialevel 3 test (`auxten-vpcompnfasp-tafeat'): 17 items;
  case-erg-abs: Case, ergative-absolutive (`case-erg-abs'): 12 items;
  case-fluid-s: Case, fluid-S (`case-fluid-s'): 17 items;
  case-focus: Case, focus (`case-focus'): 56 items;
  case-mixed: case, mixed adpositional and morphological marking (`case-mixed'): 14 items;
  case-mixed-optadp: case with mixed optional adpositional and morphological marking (`case-mixed-optadp'): 14 items;
  case-mixed2: mixed adpositional and morphological marking (2) (`case-mixed2'): 20 items;
  case-nom-acc: Case, nominative-accusative (`case-nom-acc'): 12 items;
  case-nom-acc-adp: Case, nominative-accusative w/ adpositions (`case-nom-acc-adp'): 13 items;
  case-none: Case, none (`case-none'): 5 items;
  case-optadp: case with optional adpositional marking (`case-optadp'): 14 items;
  case-split-n: Case, split-N (`case-split-n'): 62 items;
  case-split-s: Case, split-S (`case-split-s'): 15 items;
  case-split-v: Case, split-V (`case-split-v'): 60 items;
  case-tripartite: Case, tripartite (`case-tripartite'): 20 items;
  compfeatures: testing features on the auxiliary complement (`compfeatures'): 20 items;
  compfeatures-onlyformmarked: testing features on auxiliary complement but only FORM is marked on the verb (`compfeatures-onlyformmarked'): 6 items;
  dir-inv-algonquian: Direct-inverse, pseudo-Algonquian (`dir-inv-algonquian'): 28 items;
  dir-inv-fore: Direct-inverse, pseudo-Fore (`dir-inv-fore'): 76 items;
  eng-qpart-inf: Testing interaction of non-finite form and question particle.  Question particle should now only attach to finite sentences. (`eng-qpart-inf'): 5 items;
  fin-forms-noaux-1008: testing finite/nonfinite distinction when there are no auxiliaries (`fin-forms-noaux-1008'): 5 items;
  free-aux-after-v-cluster: testing free word order where the aux follows its vcomp and forms verbal clusters (`free-aux-after-v-cluster'): 144 items;
  free-aux-after-vp: testing word order with auxiliaries following their vp-compl, else free word order (`free-aux-after-vp'): 34 items;
  free-aux-before-v-cluster: testing free word order with preceding auxiliaries that take a v-comp and form a v-cluster (`free-aux-before-v-cluster'): 148 items;
  free-aux-before-vp: testing free word order with auxiliary that needs to come before its verbal complements (`free-aux-before-vp'): 39 items;
  free-one-aux-max-v: tests free word order with no verbal clusters, thus maximum one aux (`free-one-aux-max-v'): 152 items;
  infl-neg-final-opt-suffix: Negative affix as optional suffix at end of suffix string (`infl-neg-final-opt-suffix'): 8 items;
  infl-neg-nonfinal-suffix: Inflectional negation as optional non-final suffix, optionality with check box (`infl-neg-nonfinal-suffix'): 6 items;
  infl-neg-sole-suffix: Negation as the only suffix, optional (`infl-neg-sole-suffix'): 5 items;
  infl-q-aux-verb: Questions as inflection on aux verbs. (`infl-q-aux-verb'): 10 items;
  infl-q-final-opt-suffix: Question inflection as optional suffix after one other suffix (`infl-q-final-opt-suffix'): 8 items;
  infl-q-main-verb: Question marking as inflection on the main verb, no other affixes (`infl-q-main-verb'): 4 items;
  infl-q-main-verb-prefix: Questions as prefix on main verbs. (`infl-q-main-verb-prefix'): 6 items;
  infl-q-nonfinal-suffix: Question affix as non-final in suffix string. (`infl-q-nonfinal-suffix'): 6 items;
  Lexical subject dropping with no marker.  No object dropping (`lex-subj-drop'): 19 items;
  mini-infl-neg: Negation as inflection, simple case (`mini-infl-neg'): 5 items;
  multi-featured-aux: very! short test of features on the auxiliary itself (`multi-featured-aux'): 3 items;
  multi-select-case: multi-select of feature values, namely case (`multi-select-case'): 30 items;
  nf-form-withaux-vp-1008: testing nonfinite form constraint for aux complement (`nf-form-withaux-vp-1008'): 4 items;
  nf-twoforms-withtwoaux-vp-1008: testing-- two nonfinite forms (`nf-twoforms-withtwoaux-vp-1008'): 6 items;
  noaux-toblig-aopt-onv: obligatory tense, optional aspect on v, no aux level 3 test (`noaux-toblig-aopt-onv'): 6 items;
  nopaux-noinfl-vpcomp-f-formfeat: single uninflected aux with finite vp complement, level 2 test (inflection but no t&a features) (`nopaux-noinfl-vpcomp-f-formfeat'): 6 items;
  ovs-aux-after-vp: testing ovs word order with auxiliaries that follow their vp complement (`ovs-aux-after-vp'): 22 items;
  ovs-aux-before-vp: tests word order ovs with auxiliaries that precede their vp complement (`ovs-aux-before-vp'): 20 items;
  pre-vp-adv-neg: Negation as independent pre-VP modifier (`pre-vp-adv-neg'): 7 items;
  qpart-yes-no: Questions marked via sentence-initial question particle. (`qpart-yes-no'): 9 items;
  sov-aux-after-v: testing sov word order where auxiliaries precede v-comp (`sov-aux-after-v'): 266 items;
  sov-aux-before-v: testing sov word order with auxiliaries preceding their v-comp (`sov-aux-before-v'): 155 items;
  subj-aux-inv-q: Questions marked by subj-aux inversion. (`subj-aux-inv-q'): 6 items;
  All subjects caobjects can be dropped.  No markers for subject dropping. (`subj-drop'): 23 items;
  subj-v-inv-obj-drop: Testing interaction of subj-v inversion and object drop, as well as interaction of subj-v intersion and FORM and AUX features. (`subj-v-inv-obj-drop'): 15 items;
  svo-aux-after-v: testing svo word order with aux following its v-complement (`svo-aux-after-v'): 160 items;
  svo-aux-before-v: testing svo word order with auxiliary preceding v-comp (`svo-aux-before-v'): 166 items;
  test-stative: testing assignment of prog-asp to non-stative-ing comp, ignoring tense/person/number/spelling, only transitive (`test-stative'): 8 items;
  testingcompforms: small ts - known problems (`testingcompforms'): 17 items;
  tiniest: A very basic grammar just to get the regression tests started.  SOV word order, no frills. (`tiniest'): 9 items;
  v-initial-aux-after-v: testing v-initial word order when the auxiliary follows its v-complement (`v-initial-aux-after-v'): 140 items;
  v-initial-aux-after-vp: testing v-initial word order with auxiliaries following their vp-complement (`v-initial-aux-after-vp'): 158 items;
  v-initial-aux-before-v: testing v-initial word order with aux preceding its v-complement (`v-initial-aux-before-v'): 136 items;
  v-initial-aux-before-vp: testing v-initial word order where the auxiliary precedes its vp complement (`v-initial-aux-before-vp'): 139 items;
  v2-aux-eitherside-v: v2nd word order with one auxiliary that takes a v (not vp) complement which can appear freely on either side ofthe aux (`v2-aux-eitherside-v'): 30 items;
  v2-aux-eitherside-vp: v2nd word order with one auxiliary that takes a vp complement on either side (`v2-aux-eitherside-vp'): 30 items;
  view-inf-situ-inher: inflected viewpoint and inherent situation aspect (`view-inf-situ-inher'): 9 items;
  view-situ-aspect-infl: situation and viewpoint aspect as inflection (`view-situ-aspect-infl'): 13 items;
  vos-aux-after-vp: testing word order for vos languages in which the auxiliary follows its vp complement (`vos-aux-after-vp'): 19 items;
  vos-aux-before-vp: testing word order for vos languages with auxiliaries preceding their vp complement (`vos-aux-before-vp'): 22 items;
  vos-vp-aux-case-rais: testing case constraints imposed by the auxiliary: here it raises the case value from its vcomp's subject (`vos-vp-aux-case-rais'): 15 items;
  vso-aux-after-v: testing vso word order where the auxiliary follows its v-complement (`vso-aux-after-v'): 162 items;
  vso-aux-before-v-cluster: testing vso word order where the aux precedes its v-comp forming a verbal cluster (`vso-aux-before-v-cluster'): 142 items;
  vso-aux-before-v-no-cluster: test vso word order where aux precedes its v-complement and does not form a verbal cluster (`vso-aux-before-v-no-cluster'): 160 items;
  vso-aux-before-vp: testing vso word order where auxiliary precedes main-verb and takes vso complement style Irish and Welsh (`vso-aux-before-vp'): 160 items;

NIL
TSNLP(6): "current/vso-aux-before-vp"
TSNLP(7): 
tsdb(): `home/antske/delphin/matrix/trunk/gmcs/regression_tests/home/current/vso-aux-before-vp' created as new default test suite.

NIL
TSNLP(8): ; Loading
;    /home/antske/delphin/matrix/trunk/gmcs/regression_tests/grammars/vso-aux-before-vp/vso-aux-before-vp/lkb/script
;   Loading
;      /home/antske/delphin/matrix/trunk/gmcs/regression_tests/grammars/vso-aux-before-vp/vso-aux-before-vp/Version.lsp
;   Loading
;      /home/antske/delphin/matrix/trunk/gmcs/regression_tests/grammars/vso-aux-before-vp/vso-aux-before-vp/lkb/globals.lsp
;   Loading
;      /home/antske/delphin/matrix/trunk/gmcs/regression_tests/grammars/vso-aux-before-vp/vso-aux-before-vp/lkb/user-fns.lsp

Reading in type file matrix
Reading in type file head-types
Reading in type file vso-aux-before-vp
Checking type hierarchy
Checking for unique greatest lower bounds
Expanding constraints
Making constraints well formed
Expanding defaults
Type file checked successfully
Computing display ordering
Reading in lexical entry file lexicon
Reading in rules file rules
Reading in lexical rules file lrules
Reading in lexical rules file irules
Reading in root file roots
Reading in parse node file labels
;   Loading
;      /home/antske/delphin/matrix/trunk/gmcs/regression_tests/grammars/vso-aux-before-vp/vso-aux-before-vp/lkb/mrsglobals.lisp

 (recompiling semantic indices)
Indexing complete
;   Loading
;      /home/antske/delphin/matrix/trunk/gmcs/regression_tests/grammars/vso-aux-before-vp/vso-aux-before-vp/lkb/mt.lsp

Building rule filter
Building lr connections table
Grammar input complete
NIL
TSNLP(9): 
close-connection(): `/home/antske/delphin/matrix/trunk/gmcs/regression_tests/home/current/vso-aux-before-vp/' expiry.
retrieve(): found 160 items (0 output specifications).
create-cache(): write-through mode for `current/vso-aux-before-vp'.
largest-run-id(): largest `run-id' is 0.
largest-parse-id(): largest `parse-id' (for `run' 1) is 0.
install-gc-strategy(): disabling tenure; global garbage collection ... done.
(1) `iverb-3rd n1-nom.' [100000] --- 1 (0.00|0.00:0.00 s) <2:7> {11:4} (75.6K 2.9M = 3.0M) [0].
(2) `tverb-3rd n1-nom n2-acc.' [100000] --- 1 (0.01|0.01:0.01 s) <3:13> {24:7} (118.4K 3.1M = 3.2M) [0].
(3) `aux-3rd n1-nom iverb-inf.' [100000] --- 1 (0.02|0.02:0.02 s) <3:12> {22:6} (109.3K 2.7M = 2.8M) [0].
(4) `aux-3rd n1-nom tverb-inf n2-acc.' [100000] --- 1 (0.01|0.01:0.01 s) <4:18> {38:9} (142.5K 2.3M = 2.4M) [0].
(5) `aux-3rd n1-nom aux-inf iverb-inf.' [100000] --- 1 (0.01|0.01:0.01 s) <4:17> {34:8} (136.5K 2.3M = 2.4M) [0].
(6) `aux-3rd n1-nom aux-inf tverb-inf n2-acc.' [100000] --- 1 (0.00|0.00:0.00 s) <5:23> {52:11} (183.5K 2.6M = 2.8M) [0].
(7) `aux-3rd n1-nom aux-inf aux-inf aux-inf tverb-inf n2-acc.' [100000] --- 1 (0.02|0.02:0.02 s) <7:33> {80:15} (266.9K 3.2M = 3.5M) [0].
(8) `*aux-3rd iverb-inf n1-nom.' [100000] --- (0.01|0.01 s) <3:12> {27:6} (98.1K 2.0M = 2.1M) [0].
(9) `*aux-3rd tverb-inf n1-nom n2-acc.' [100000] --- (0.00|0.00 s) <4:17> {41:8} (133.3K 2.3M = 2.4M) [0].
(10) `*aux-3rd aux-inf iverb-inf n1-nom.' [100000] --- (0.00|0.00 s) <4:17> {43:8} (139.7K 2.3M = 2.4M) [0].
(11) `*aux-3rd aux-inf aux-inf aux-inf tverb-inf n1-nom n2-acc.' [100000] --- (0.01|0.01 s) <7:29> {68:11} (217.2K 3.1M = 3.4M) [0].
(12) `*n1-nom tverb-3rd n2-acc.' [100000] --- (0.00|0.00 s) <3:11> {19:6} (88.6K 2.0M = 2.0M) [0].
(13) `*n1-nom n2-acc tverb-3rd.' [100000] --- (0.01|0.01 s) <3:8> {8:5} (72.7K 1.9M = 2.0M) [0].
(14) `*tverb-3rd n2-acc n1-nom.' [100000] --- (0.00|0.00 s) <3:11> {21:6} (90.2K 2.0M = 2.0M) [0].
(15) `*n2-acc tverb-3rd n1-nom.' [100000] --- (0.00|0.00 s) <3:11> {18:6} (88.6K 2.0M = 2.0M) [0].
(16) `*tverb-3rd n2-acc n1-nom.' [100000] --- (0.01|0.01 s) <3:11> {21:6} (90.2K 2.0M = 2.0M) [0].
(17) `*aux-3rd tverb-inf n2-acc n1-nom.' [100000] --- (0.00|0.00 s) <4:16> {37:8} (132.2K 2.3M = 2.4M) [0].
(18) `*n1-nom aux-3rd tverb-inf n2-acc.' [100000] --- (0.01|0.01 s) <4:16> {33:8} (129.1K 2.3M = 2.4M) [0].
(19) `*tverb-inf aux-3rd n1-nom n2-acc.' [100000] --- (0.00|0.00 s) <4:16> {36:7} (124.1K 2.3M = 2.4M) [0].
(20) `*tverb-inf n1-nom aux-3rd n2-acc.' [100000] --- (0.00|0.00 s) <4:17> {36:8} (132.2K 2.3M = 2.4M) [0].
(21) `*tverb-inf n2-acc n1-nom aux-3rd.' [100000] --- (0.01|0.01 s) <4:13> {24:7} (113.2K 2.2M = 2.3M) [0].
(22) `*tverb-inf aux-inf n1-nom n2-acc.' [100000] --- (0.00|0.00 s) <4:16> {37:7} (122.7K 2.3M = 2.4M) [0].
(23) `*aux-inf aux-3rd iverb-inf n1-nom.' [100000] --- (0.00|0.00 s) <4:16> {40:7} (129.0K 2.3M = 2.4M) [0].
(24) `*aux-3rd aux-inf tverb-inf aux-inf n1-nom n2-acc.' [100000] --- (0.00|0.00 s) <6:24> {54:9} (179.8K 2.8M = 3.0M) [0].
(25) `*n1-nom iverb-3rd.' [100000] --- (0.00|0.00 s) <2:5> {5:3} (46.1K 1.6M = 1.7M) [0].
(26) `*n1-nom tverb-inf aux-3rd n2-acc.' [100000] --- (0.00|0.00 s) <4:15> {31:7} (120.5K 2.2M = 2.4M) [0].
(27) `*n2-acc tverb-inf aux-3rd n1-nom.' [100000] --- (0.01|0.01 s) <4:15> {31:7} (120.5K 2.2M = 2.4M) [0].
(28) `*n1-nom n2-acc tverb-inf aux-3rd.' [100000] --- (0.00|0.00 s) <4:12> {17:6} (100.8K 2.2M = 2.3M) [0].
(29) `*n2-acc n1-nom tverb-inf aux-3rd.' [100000] --- (0.00|0.00 s) <4:12> {17:6} (100.8K 2.2M = 2.3M) [0].
(30) `*tverb-inf aux-3rd n1-nom n2-acc.' [100000] --- (0.00|0.00 s) <4:16> {36:7} (124.1K 2.3M = 2.4M) [0].
(31) `*tverb-inf aux-3rd n2-acc n1-nom.' [100000] --- (0.01|0.01 s) <4:16> {36:7} (124.1K 2.3M = 2.4M) [0].
(32) `*tverb-inf n2-acc aux-3rd n1-nom.' [100000] --- (0.00|0.00 s) <4:16> {34:8} (130.1K 2.3M = 2.4M) [0].
(33) `*tverb-inf n2-acc n1-nom aux-3rd.' [100000] --- (0.00|0.00 s) <4:13> {24:7} (113.2K 2.2M = 2.3M) [0].
(34) `*n1-nom tverb-inf n2-acc aux-3rd.' [100000] --- (0.00|0.00 s) <4:13> {24:7} (113.2K 2.2M = 2.3M) [0].
(35) `*n2-acc tverb-inf n1-nom aux-3rd.' [100000] --- (0.01|0.01 s) <4:14> {24:7} (114.0K 2.2M = 2.3M) [0].
(36) `*tverb-inf n1-nom n2-acc aux-3rd.' [100000] --- (0.00|0.00 s) <4:15> {29:8} (122.9K 2.2M = 2.4M) [0].
(37) `*tverb-inf n1-nom aux-3rd n2-acc.' [100000] --- (0.00|0.00 s) <4:17> {36:8} (132.2K 2.3M = 2.4M) [0].
(38) `*aux-3rd tverb-inf n2-acc n1-nom.' [100000] --- (0.01|0.01 s) <4:16> {37:8} (132.2K 2.3M = 2.4M) [0].
(39) `*n1-nom n2-acc aux-3rd tverb-inf.' [100000] --- (0.00|0.00 s) <4:12> {17:6} (100.9K 2.2M = 2.3M) [0].
(40) `*n2-acc aux-3rd n1-nom tverb-inf.' [100000] --- (0.00|0.00 s) <4:14> {24:7} (115.0K 2.2M = 2.3M) [0].
(41) `*n1-nom aux-3rd n2-acc tverb-inf.' [100000] --- (0.00|0.00 s) <4:14> {24:7} (115.0K 2.2M = 2.3M) [0].
(42) `*aux-inf n2-acc tverb-inf n1-nom aux-3rd.' [100000] --- (0.01|0.01 s) <5:20> {42:9} (157.4K 2.5M = 2.7M) [0].
(43) `*aux-inf n2-acc tverb-inf n1-nom aux-3rd.' [100000] --- (0.01|0.01 s) <5:20> {42:9} (157.4K 2.5M = 2.7M) [0].
(44) `*aux-inf n2-acc n1-nom tverb-inf aux-3rd.' [100000] --- (0.00|0.00 s) <5:18> {35:8} (144.0K 2.5M = 2.6M) [0].
(45) `*aux-inf n2-acc n1-nom aux-3rd tverb-inf.' [100000] --- (0.01|0.01 s) <5:18> {35:8} (144.0K 2.5M = 2.6M) [0].
(46) `*aux-inf n2-acc aux-3rd n1-nom tverb-inf.' [100000] --- (0.00|0.00 s) <5:20> {42:9} (158.4K 2.5M = 2.7M) [0].
(47) `*aux-inf n2-acc aux-3rd n1-nom tverb-inf.' [100000] --- (0.01|0.01 s) <5:20> {42:9} (158.4K 2.5M = 2.7M) [0].
(48) `*aux-inf n1-nom aux-3rd tverb-inf n2-acc.' [100000] --- (0.00|0.00 s) <5:22> {51:10} (172.5K 2.6M = 2.8M) [0].
(49) `*aux-inf n1-nom aux-3rd n2-acc tverb-inf.' [100000] --- (0.01|0.01 s) <5:20> {42:9} (158.4K 2.5M = 2.7M) [0].
(50) `*aux-inf n1-nom n2-acc tverb-inf aux-3rd.' [100000] --- (0.00|0.00 s) <5:18> {35:8} (144.0K 2.5M = 2.6M) [0].
(51) `*aux-inf n1-nom n2-acc aux-3rd tverb-inf.' [100000] --- (0.00|0.00 s) <5:18> {35:8} (144.0K 2.5M = 2.6M) [0].
(52) `*aux-inf n1-nom tverb-inf n2-acc aux-3rd.' [100000] --- (0.01|0.01 s) <5:20> {45:10} (165.5K 2.6M = 2.7M) [0].
(53) `*aux-inf n1-nom tverb-inf aux-3rd n2-acc.' [100000] --- (0.00|0.00 s) <5:21> {47:9} (162.5K 2.6M = 2.7M) [0].
(54) `*aux-inf tverb-inf n2-acc n1-nom aux-3rd.' [100000] --- (0.01|0.01 s) <5:18> {40:9} (155.0K 2.5M = 2.7M) [0].
(55) `*aux-inf tverb-inf n2-acc aux-3rd n1-nom.' [100000] --- (0.00|0.00 s) <5:21> {50:10} (171.9K 2.6M = 2.7M) [0].
(56) `*aux-inf tverb-inf n1-nom aux-3rd n2-acc.' [100000] --- (0.00|0.00 s) <5:21> {49:9} (163.1K 2.6M = 2.7M) [0].
(57) `*aux-inf tverb-inf n1-nom n2-acc aux-3rd.' [100000] --- (0.01|0.01 s) <5:19> {46:9} (156.9K 2.5M = 2.7M) [0].
(58) `*aux-inf tverb-inf aux-3rd n1-nom n2-acc.' [100000] --- (0.00|0.00 s) <5:20> {45:8} (152.0K 2.6M = 2.7M) [0].
(59) `*aux-inf tverb-inf aux-3rd n2-acc n1-nom.' [100000] --- (0.01|0.01 s) <5:20> {45:8} (152.0K 2.6M = 2.7M) [0].
(60) `*aux-inf aux-3rd tverb-inf n1-nom n2-acc.' [100000] --- (0.01|0.01 s) <5:21> {50:9} (161.2K 2.6M = 2.7M) [0].
(61) `*aux-inf aux-3rd tverb-inf n2-acc n1-nom.' [100000] --- (0.00|0.00 s) <5:20> {50:9} (163.1K 2.6M = 2.7M) [0].
(62) `*aux-inf aux-3rd n1-nom tverb-inf n2-acc.' [100000] --- (0.01|0.01 s) <5:22> {55:10} (174.4K 2.6M = 2.8M) [0].
(63) `*aux-inf aux-3rd n1-nom n2-acc tverb-inf.' [100000] --- (0.01|0.01 s) <5:18> {39:8} (147.1K 2.5M = 2.7M) [0].
(64) `*aux-inf aux-3rd n2-acc tverb-inf n1-nom.' [100000] --- (0.00|0.00 s) <5:21> {49:9} (163.3K 2.6M = 2.7M) [0].
(65) `*aux-inf aux-3rd n2-acc n1-nom tverb-inf.' [100000] --- (0.01|0.01 s) <5:18> {39:8} (147.1K 2.5M = 2.7M) [0].
(66) `*aux-3rd aux-inf n1-nom tverb-inf n2-acc.' [100000] --- (0.01|0.01 s) <5:22> {55:10} (174.3K 2.6M = 2.8M) [0].
(67) `*aux-3rd aux-inf n1-nom n2-acc tverb-inf.' [100000] --- (0.00|0.00 s) <5:18> {39:8} (147.0K 2.5M = 2.7M) [0].
(68) `*aux-3rd aux-inf n2-acc tverb-inf n1-nom.' [100000] --- (0.01|0.01 s) <5:21> {49:9} (163.2K 2.6M = 2.7M) [0].
(69) `*aux-3rd aux-inf n2-acc n1-nom tverb-inf.' [100000] --- (0.00|0.00 s) <5:18> {39:8} (147.0K 2.5M = 2.7M) [0].
(70) `*aux-3rd aux-inf tverb-inf n1-nom n2-acc.' [100000] --- (0.00|0.00 s) <5:21> {50:9} (161.3K 2.6M = 2.7M) [0].
(71) `*aux-3rd aux-inf tverb-inf n2-acc n1-nom.' [100000] --- (0.01|0.01 s) <5:21> {53:10} (174.6K 2.6M = 2.8M) [0].
(72) `*aux-3rd tverb-inf aux-inf n1-nom n2-acc.' [100000] --- (0.00|0.00 s) <5:20> {45:8} (151.9K 2.6M = 2.7M) [0].
(73) `*aux-3rd tverb-inf aux-inf n2-acc n1-nom.' [100000] --- (0.00|0.00 s) <5:20> {45:8} (151.9K 2.6M = 2.7M) [0].
(74) `*aux-3rd tverb-inf n1-nom aux-inf n2-acc.' [100000] --- (0.00|0.00 s) <5:21> {49:9} (162.9K 2.6M = 2.7M) [0].
(75) `*aux-3rd tverb-inf n1-nom n2-acc aux-inf.' [100000] --- (0.00|0.00 s) <5:19> {46:9} (157.1K 2.5M = 2.7M) [0].
(76) `*aux-3rd tverb-inf n2-acc aux-inf n1-nom.' [100000] --- (0.01|0.01 s) <5:21> {50:10} (171.8K 2.6M = 2.7M) [0].
(77) `*aux-3rd tverb-inf n2-acc n1-nom aux-inf.' [100000] --- (0.00|0.00 s) <5:18> {40:9} (155.2K 2.5M = 2.7M) [0].
(78) `*aux-3rd n1-nom tverb-inf aux-inf n2-acc.' [100000] --- (0.00|0.00 s) <5:21> {47:9} (162.5K 2.6M = 2.7M) [0].
(79) `*aux-3rd n1-nom tverb-inf n2-acc aux-inf.' [100000] --- (0.01|0.01 s) <5:20> {45:10} (165.8K 2.6M = 2.7M) [0].
(80) `*aux-3rd n1-nom aux-inf n2-acc tverb-inf.' [100000] --- (0.00|0.00 s) <5:20> {42:9} (158.5K 2.5M = 2.7M) [0].
(81) `*aux-3rd n1-nom n2-acc tverb-inf aux-inf.' [100000] --- (0.01|0.01 s) <5:18> {35:8} (144.3K 2.5M = 2.6M) [0].
(82) `*aux-3rd n1-nom n2-acc aux-inf tverb-inf.' [100000] --- (0.01|0.01 s) <5:18> {35:8} (144.2K 2.5M = 2.6M) [0].
(83) `*aux-3rd n2-acc n1-nom aux-inf tverb-inf.' [100000] --- (0.00|0.00 s) <5:18> {35:8} (144.2K 2.5M = 2.6M) [0].
(84) `*aux-3rd n2-acc n1-nom tverb-inf aux-inf.' [100000] --- (0.01|0.01 s) <5:18> {35:8} (144.3K 2.5M = 2.6M) [0].
(85) `*aux-3rd n2-acc tverb-inf n1-nom aux-inf.' [100000] --- (0.00|0.00 s) <5:20> {42:9} (157.7K 2.5M = 2.7M) [0].
(86) `*aux-3rd n2-acc tverb-inf aux-inf n1-nom.' [100000] --- (0.01|0.01 s) <5:21> {47:9} (162.5K 2.6M = 2.7M) [0].
(87) `*aux-3rd n2-acc aux-inf tverb-inf n1-nom.' [100000] --- (0.00|0.00 s) <5:21> {47:9} (161.9K 2.6M = 2.7M) [0].
(88) `*aux-3rd n2-acc aux-inf n1-nom tverb-inf.' [100000] --- (0.01|0.01 s) <5:20> {42:9} (158.5K 2.5M = 2.7M) [0].
(89) `*tverb-inf n2-acc aux-inf n1-nom aux-3rd.' [100000] --- (0.00|0.00 s) <5:19> {40:9} (155.2K 2.5M = 2.7M) [0].
(90) `*tverb-inf n2-acc aux-inf aux-3rd n1-nom.' [100000] --- (0.00|0.00 s) <5:20> {47:9} (161.0K 2.6M = 2.7M) [0].
(91) `*tverb-inf n2-acc n1-nom aux-inf aux-3rd.' [100000] --- (0.00|0.00 s) <5:17> {33:8} (141.1K 2.5M = 2.6M) [0].
(92) `*tverb-inf n2-acc n1-nom aux-3rd aux-inf.' [100000] --- (0.01|0.00 s) <5:17> {33:8} (141.4K 2.5M = 2.6M) [0].
(93) `*tverb-inf n2-acc aux-3rd n1-nom aux-inf.' [100000] --- (0.01|0.01 s) <5:19> {40:9} (155.5K 2.5M = 2.7M) [0].
(94) `*tverb-inf n2-acc aux-3rd aux-inf n1-nom.' [100000] --- (0.00|0.00 s) <5:20> {47:9} (160.9K 2.6M = 2.7M) [0].
(95) `*tverb-inf n1-nom n2-acc aux-inf aux-3rd.' [100000] --- (0.01|0.01 s) <5:19> {38:9} (150.9K 2.5M = 2.7M) [0].
(96) `*tverb-inf n1-nom n2-acc aux-3rd aux-inf.' [100000] --- (0.00|0.00 s) <5:19> {38:9} (151.1K 2.5M = 2.7M) [0].
(97) `*tverb-inf n1-nom aux-inf n2-acc aux-3rd.' [100000] --- (0.00|0.00 s) <5:20> {42:9} (157.2K 2.5M = 2.7M) [0].
(98) `*tverb-inf n1-nom aux-inf aux-3rd n2-acc.' [100000] --- (0.01|0.01 s) <5:21> {47:9} (161.8K 2.6M = 2.7M) [0].
(99) `*tverb-inf n1-nom aux-3rd n2-acc aux-inf.' [100000] --- (0.00|0.00 s) <5:20> {42:9} (157.5K 2.5M = 2.7M) [0].
(100) `*tverb-inf n1-nom aux-3rd aux-inf n2-acc.' [100000] --- (0.01|0.01 s) <5:21> {47:9} (161.7K 2.6M = 2.7M) [0].
(101) `*tverb-inf aux-inf aux-3rd n1-nom n2-acc.' [100000] --- (0.00|0.00 s) <5:20> {45:8} (152.2K 2.6M = 2.7M) [0].
(102) `*tverb-inf aux-inf aux-3rd n2-acc n1-nom.' [100000] --- (0.01|0.00 s) <5:20> {45:8} (152.2K 2.6M = 2.7M) [0].
(103) `*tverb-inf aux-inf n2-acc n1-nom aux-3rd.' [100000] --- (0.01|0.01 s) <5:18> {39:8} (146.7K 2.5M = 2.7M) [0].
(104) `*tverb-inf aux-inf n2-acc aux-3rd n1-nom.' [100000] --- (0.00|0.00 s) <5:21> {49:9} (163.9K 2.6M = 2.7M) [0].
(105) `*tverb-inf aux-inf n1-nom aux-3rd n2-acc.' [100000] --- (0.01|0.01 s) <5:21> {49:9} (163.9K 2.6M = 2.7M) [0].
(106) `*tverb-inf aux-inf n1-nom n2-acc aux-3rd.' [100000] --- (0.01|0.01 s) <5:18> {39:8} (146.7K 2.5M = 2.7M) [0].
(107) `*tverb-inf aux-3rd aux-inf n1-nom n2-acc.' [100000] --- (0.00|0.00 s) <5:20> {45:8} (152.1K 2.6M = 2.7M) [0].
(108) `*tverb-inf aux-3rd aux-inf n2-acc n1-nom.' [100000] --- (0.01|0.01 s) <5:20> {45:8} (152.1K 2.6M = 2.7M) [0].
(109) `*tverb-inf aux-3rd n1-nom n2-acc aux-inf.' [100000] --- (0.00|0.00 s) <5:18> {39:8} (147.1K 2.5M = 2.7M) [0].
(110) `*tverb-inf aux-3rd n1-nom aux-inf n2-acc.' [100000] --- (0.01|0.01 s) <5:21> {49:9} (164.0K 2.6M = 2.7M) [0].
(111) `*tverb-inf aux-3rd n2-acc aux-inf n1-nom.' [100000] --- (0.00|0.00 s) <5:21> {49:9} (164.0K 2.6M = 2.7M) [0].
(112) `*tverb-inf aux-3rd n2-acc n1-nom aux-inf.' [100000] --- (0.00|0.00 s) <5:18> {39:8} (147.1K 2.5M = 2.7M) [0].
(113) `*n1-nom aux-3rd aux-inf tverb-inf n2-acc.' [100000] --- (0.01|0.01 s) <5:21> {47:10} (169.9K 2.6M = 2.7M) [0].
(114) `*n1-nom aux-3rd aux-inf n2-acc tverb-inf.' [100000] --- (0.00|0.00 s) <5:18> {37:8} (145.8K 2.5M = 2.7M) [0].
(115) `*n1-nom aux-3rd tverb-inf aux-inf n2-acc.' [100000] --- (0.01|0.01 s) <5:19> {40:8} (148.3K 2.5M = 2.7M) [0].
(116) `*n1-nom aux-3rd tverb-inf n2-acc aux-inf.' [100000] --- (0.00|0.00 s) <5:18> {40:9} (155.2K 2.5M = 2.7M) [0].
(117) `*n1-nom aux-3rd n2-acc tverb-inf aux-inf.' [100000] --- (0.01|0.01 s) <5:18> {33:8} (143.1K 2.5M = 2.6M) [0].
(118) `*n1-nom aux-3rd n2-acc aux-inf tverb-inf.' [100000] --- (0.00|0.00 s) <5:18> {33:8} (143.0K 2.5M = 2.6M) [0].
(119) `*n1-nom aux-inf aux-3rd tverb-inf n2-acc.' [100000] --- (0.01|0.01 s) <5:20> {46:9} (160.0K 2.6M = 2.7M) [0].
(120) `*n1-nom aux-inf aux-3rd n2-acc tverb-inf.' [100000] --- (0.00|0.00 s) <5:18> {37:8} (145.9K 2.5M = 2.7M) [0].
(121) `*n1-nom aux-inf tverb-inf aux-3rd n2-acc.' [100000] --- (0.00|0.00 s) <5:19> {40:8} (148.5K 2.5M = 2.7M) [0].
(122) `*n1-nom aux-inf tverb-inf n2-acc aux-3rd.' [100000] --- (0.00|0.00 s) <5:18> {40:9} (155.0K 2.5M = 2.7M) [0].
(123) `*n1-nom aux-inf n2-acc tverb-inf aux-3rd.' [100000] --- (0.00|0.00 s) <5:18> {33:8} (142.8K 2.5M = 2.6M) [0].
(124) `*n1-nom aux-inf n2-acc aux-3rd tverb-inf.' [100000] --- (0.01|0.01 s) <5:18> {33:8} (142.8K 2.5M = 2.6M) [0].
(125) `*n1-nom n2-acc aux-3rd aux-inf tverb-inf.' [100000] --- (0.00|0.00 s) <5:16> {26:7} (128.8K 2.5M = 2.6M) [0].
(126) `*n1-nom n2-acc aux-3rd tverb-inf aux-inf.' [100000] --- (0.01|0.01 s) <5:16> {26:7} (129.0K 2.5M = 2.6M) [0].
(127) `*n1-nom n2-acc aux-inf tverb-inf aux-3rd.' [100000] --- (0.00|0.00 s) <5:16> {26:7} (128.8K 2.5M = 2.6M) [0].
(128) `*n1-nom n2-acc aux-inf aux-3rd tverb-inf.' [100000] --- (0.01|0.01 s) <5:16> {26:7} (128.8K 2.5M = 2.6M) [0].
(129) `*n1-nom n2-acc tverb-inf aux-3rd aux-inf.' [100000] --- (0.00|0.00 s) <5:16> {26:7} (129.0K 2.5M = 2.6M) [0].
(130) `*n1-nom n2-acc tverb-inf aux-inf aux-3rd.' [100000] --- (0.00|0.00 s) <5:16> {26:7} (128.7K 2.5M = 2.6M) [0].
(131) `*n1-nom tverb-inf aux-3rd aux-inf n2-acc.' [100000] --- (0.00|0.00 s) <5:19> {40:8} (148.5K 2.5M = 2.7M) [0].
(132) `*n1-nom tverb-inf aux-3rd n2-acc aux-inf.' [100000] --- (0.01|0.01 s) <5:18> {37:8} (145.9K 2.5M = 2.7M) [0].
(133) `*n1-nom tverb-inf n2-acc aux-3rd aux-inf.' [100000] --- (0.00|0.00 s) <5:17> {33:8} (141.4K 2.5M = 2.6M) [0].
(134) `*n1-nom tverb-inf n2-acc aux-inf aux-3rd.' [100000] --- (0.01|0.01 s) <5:17> {33:8} (141.1K 2.5M = 2.6M) [0].
(135) `*n1-nom tverb-inf aux-inf n2-acc aux-3rd.' [100000] --- (0.00|0.00 s) <5:18> {37:8} (145.5K 2.5M = 2.7M) [0].
(136) `*n1-nom tverb-inf aux-inf aux-3rd n2-acc.' [100000] --- (0.00|0.00 s) <5:19> {40:8} (148.6K 2.5M = 2.7M) [0].
(137) `*n2-acc aux-3rd aux-inf tverb-inf n1-nom.' [100000] --- (0.00|0.00 s) <5:19> {40:8} (147.7K 2.5M = 2.7M) [0].
(138) `*n2-acc aux-3rd aux-inf n1-nom tverb-inf.' [100000] --- (0.00|0.00 s) <5:18> {37:8} (145.8K 2.5M = 2.7M) [0].
(139) `*n2-acc aux-3rd tverb-inf aux-inf n1-nom.' [100000] --- (0.01|0.01 s) <5:19> {40:8} (148.3K 2.5M = 2.7M) [0].
(140) `*n2-acc aux-3rd tverb-inf n1-nom aux-inf.' [100000] --- (0.00|0.00 s) <5:18> {37:8} (145.1K 2.5M = 2.7M) [0].
(141) `*n2-acc aux-3rd n1-nom tverb-inf aux-inf.' [100000] --- (0.01|0.01 s) <5:18> {33:8} (143.1K 2.5M = 2.6M) [0].
(142) `*n2-acc aux-3rd n1-nom aux-inf tverb-inf.' [100000] --- (0.01|0.01 s) <5:18> {33:8} (143.0K 2.5M = 2.6M) [0].
(143) `*n2-acc aux-inf aux-3rd tverb-inf n1-nom.' [100000] --- (0.00|0.00 s) <5:19> {40:8} (147.7K 2.5M = 2.7M) [0].
(144) `*n2-acc aux-inf aux-3rd n1-nom tverb-inf.' [100000] --- (0.01|0.01 s) <5:18> {37:8} (145.9K 2.5M = 2.7M) [0].
(145) `*n2-acc aux-inf tverb-inf aux-3rd n1-nom.' [100000] --- (0.00|0.00 s) <5:19> {40:8} (148.5K 2.5M = 2.7M) [0].
(146) `*n2-acc aux-inf tverb-inf n1-nom aux-3rd.' [100000] --- (0.01|0.00 s) <5:18> {37:8} (144.9K 2.5M = 2.7M) [0].
(147) `*n2-acc aux-inf n1-nom tverb-inf aux-3rd.' [100000] --- (0.00|0.00 s) <5:18> {33:8} (142.8K 2.5M = 2.6M) [0].
(148) `*n2-acc aux-inf n1-nom aux-3rd tverb-inf.' [100000] --- (0.01|0.01 s) <5:18> {33:8} (142.8K 2.5M = 2.6M) [0].
(149) `*n2-acc n1-nom aux-3rd aux-inf tverb-inf.' [100000] --- (0.01|0.01 s) <5:16> {26:7} (128.8K 2.5M = 2.6M) [0].
(150) `*n2-acc n1-nom aux-3rd tverb-inf aux-inf.' [100000] --- (0.01|0.00 s) <5:16> {26:7} (129.0K 2.5M = 2.6M) [0].
(151) `*n2-acc n1-nom aux-inf tverb-inf aux-3rd.' [100000] --- (0.00|0.00 s) <5:16> {26:7} (128.8K 2.5M = 2.6M) [0].
(152) `*n2-acc n1-nom aux-inf aux-3rd tverb-inf.' [100000] --- (0.01|0.01 s) <5:16> {26:7} (128.8K 2.5M = 2.6M) [0].
(153) `*n2-acc n1-nom tverb-inf aux-3rd aux-inf.' [100000] --- (0.00|0.00 s) <5:16> {26:7} (129.0K 2.5M = 2.6M) [0].
(154) `*n2-acc n1-nom tverb-inf aux-inf aux-3rd.' [100000] --- (0.01|0.01 s) <5:16> {26:7} (128.7K 2.5M = 2.6M) [0].
(155) `*n2-acc tverb-inf aux-3rd aux-inf n1-nom.' [100000] --- (0.00|0.00 s) <5:19> {40:8} (148.5K 2.5M = 2.7M) [0].
(156) `*n2-acc tverb-inf aux-3rd n1-nom aux-inf.' [100000] --- (0.01|0.01 s) <5:18> {37:8} (145.9K 2.5M = 2.7M) [0].
(157) `*n2-acc tverb-inf aux-inf aux-3rd n1-nom.' [100000] --- (0.01|0.01 s) <5:19> {40:8} (148.6K 2.5M = 2.7M) [0].
(158) `*n2-acc tverb-inf aux-inf n1-nom aux-3rd.' [100000] --- (0.00|0.00 s) <5:18> {37:8} (145.5K 2.5M = 2.7M) [0].
(159) `*n2-acc tverb-inf n1-nom aux-3rd aux-inf.' [100000] --- (0.01|0.01 s) <5:18> {33:8} (142.1K 2.5M = 2.6M) [0].
(160) `*n2-acc tverb-inf n1-nom aux-inf aux-3rd.' [100000] --- (0.00|0.00 s) <5:18> {33:8} (141.9K 2.5M = 2.6M) [0].
flush-cache(): flushing `current/vso-aux-before-vp' cache ... done.
close-connection(): `current/vso-aux-before-vp' expiry.
NIL
TSNLP(10): T
TSNLP(11): EOF
Really exit lisp [n]? 
close-connection(): `gold/vso-aux-before-vp' expiry.
close-connection(): `current/vso-aux-before-vp' expiry.
