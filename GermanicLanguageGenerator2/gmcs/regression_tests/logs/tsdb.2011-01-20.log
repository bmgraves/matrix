International Allegro CL Enterprise Edition
8.1 [64-bit Linux (x86-64)] (Nov 30, 2008 17:07)
Copyright (C) 1985-2007, Franz Inc., Oakland, CA, USA.  All Rights Reserved.

This standard runtime copy of Allegro CL was built by:
   [TC13152] Universitetet i Oslo (IFI)

; Loading /home/antske/delphin/logon/dot.tsdbrc

  LOGON Closed-Class Test Suite (`base'): 290 items;
  HandOn Corpus from DNT Activities (`dnt.aktivitet'): 3499 items;
  HandOn Corpus from DNT Articles (`dnt.artikkel'): 443 items;
  HandOn Corpus from DNT Areas (`dnt.omraade'): 836 items;
  HandOn Corpus from DNT Trails (`dnt.rute'): 14001 items;
  HandOn Corpus from DNT Trip Recommendations (`dnt.turforslag'): 4158 items;
  Basic Development Test Suite (`enkel'): 72 items;
  HandOn Corpus from Willassen Overview (`guide.generelt'): 317 items;
  HandOn Corpus from Willassen Areas (`guide.omraade'): 1429 items;
  LOGON Harmonization Test Suite (`harmoni'): 62 items;
  LOGON Jotunheimen Corpus (All Sections) (`jh'): 2146 items;
  LOGON Jotunheimen Corpus (Section 0) (`jh0'): 88 items;
  LOGON Jotunheimen Corpus (Section 1) (`jh1'): 451 items;
  LOGON Jotunheimen Corpus (Section 2) (`jh2'): 436 items;
  LOGON Jotunheimen Corpus (Section 3) (`jh3'): 481 items;
  LOGON Jotunheimen Corpus (Section 4) (`jh4'): 535 items;
  LOGON Jotunheimen Corpus (Section 5) (`jh5'): 155 items;
  LOGON Jotunheimen Corpus (Evaluation Sub-Set) (`jhe'): 84 items;
  LOGON Jotunheimen Test Corpus (Known-Vocabulary) (`jhk'): 84 items;
  LOGON Jotunheimen Test Corpus (Unknown-Vocabulary) (`jhu'): 98 items;
  HandOn Regression Sample (5 to 15 Words) (`mark'): 500 items;
  Norwegian MRS Test Suite (`mrs'): 107 items;
  LOGON PSTG Corpus (16 to 20 Words) (`nut'): 224 items;
  LOGON Preikestolen Corpus (`ps'): 322 items;
  LOGON Preikestolen Corpus (Evaluation Sub-Set) (`pse'): 15 items;
  LOGON Preikestolen Test Corpus (Known-Vocabulary) (`psk'): 15 items;
  LOGON Preikestolen Test Corpus (Unknown-Vocabulary) (`psu'): 15 items;
  LOGON PSTG Corpus (1 to 10 Words) (`raak'): 613 items;
  LOGON Jotunheimen Corpus (11 to 15 Words) (`sti'): 412 items;
  LOGON Turglede Corpus (Original) (`tg'): 1024 items;
  LOGON Turglede Corpus (Left-Over) (`tg+'): 1892 items;
  LOGON Turglede Corpus (Evaluation Sub-Set) (`tge'): 45 items;
  LOGON Turglede Test Corpus (Known-Vocabulary) (`tgk'): 45 items;
  LOGON Turglede Test Corpus (Unknown-Vocabulary) (`tgu'): 45 items;
  LOGON Jotunheimen Corpus (16 to 20 Words) (`topp'): 348 items;
  LOGON PSTG Corpus (11 to 15 Words) (`traakk'): 341 items;
  First LOGON Development Corpus (`tur'): 104 items;
  LOGON Unknown Syntactic Test Suite (`usts'): 148 items;
  LOGON Jotunheimen Corpus (1 to 10 Words) (`vei'): 981 items;


[changing package from "COMMON-LISP-USER" to "TSDB"]
TSNLP(1): NIL
TSNLP(2): NIL
TSNLP(3): T
TSNLP(4): "/home/antske/delphin/matrix/branches/antske/GermanicLanguageGenerator/gmcs/regression_tests//home/"
TSNLP(5): 
  Cree: Plains Cree (sfd dissertation) (`Cree'): 106 items;
  Sahaptin-short: Sahaptin, shorter version (sfd dissertation) (`Sahaptin-short'): 894 items;
  Tagalog: Tagalog (sfd dissertation) (`Tagalog'): 29 items;
  Subject dropping for all verbs with a marker left optionally for both dropped and overt subjects (`all-subj-drop-wth-opt-marker'): 47 items;
  All subject droppiuired marker for both dropped and overt subjects.  No object dropping. (`all-subj-drop-wth-req-marker'): 46 items;
  Object dropping is allowed for all verb types a marker is not permitted with dropped arguments and is optional for overt. (`arg-opt-all-comps-drop-marker-np-wth-drop-opt-wthout'): 8 items;
  Object dropping is allowed for all verb types.  A marker is required with overt arguments and not permitted with dropped arguments. (`arg-opt-all-comps-drop-marker-np-wth-drop-opt-wthout'): 8 items;
  Object dropping is allowed for all verb types and a marker is optional if the object is dropped and not permitted if it is overt. (`arg-opt-all-comps-drop-marker-opt-wth-drop-np-wthout'): 8 items;
  Object dropping is allowed for verb types and object marking is optional when for dropped and overt objects. (`arg-opt-all-comps-drop-marker-opt-wth-drop-opt-wthout'): 8 items;
  Object dropping for all verb types.  Marker is optional for dropped objects and required for overt objects. (`arg-opt-all-comps-drop-marker-opt-wth-drop-req-wthout'): 8 items;
  Object dropping is allowed for all verbs and an object marker is required when the object is dropped and not permitted with an overt object. (`arg-opt-all-comps-drop-marker-req-wth-drop-np-wthout'): 12 items;
  Object dropping allowed for all verbs.  Marker is required for dropping and optional otherwise. (`arg-opt-all-comps-drop-marker-req-wth-drop-opt-wthout'): 12 items;
  Object dropping is allowed for all verbs and a marker is required when objects are dropped and when they are not. (`arg-opt-all-comps-drop-marker-req-wth-drop-req-wthout'): 12 items;
  All complements can be dropped. No marker. (`arg-opt-all-comps-drop-wth-no-marker'): 13 items;
  arg-opt-all-subj-drop-marker-np-wth-drop-opt-wthout: Subject dropping is allowed for all verb types.  A marker is not permitted with a dropped subject and is optional with an overt one.  Object dropping is not allowed. (`arg-opt-all-subj-drop-marker-np-wth-drop-opt-wthout'): 10 items;
  arg-opt-all-subj-drop-marker-np-wth-drop-req-wthout: Subject dropping for all verb types. Marker not permitted with dropped subj and req with overt arg. (`arg-opt-all-subj-drop-marker-np-wth-drop-req-wthout'): 8 items;
  arg-opt-all-subj-drop-marker-opt-wth-drop-np-wthout: Subject dropping for all verb types. Marker optional with drop and not permitted with overt subj. (`arg-opt-all-subj-drop-marker-opt-wth-drop-np-wthout'): 8 items;
  arg-opt-all-subj-drop-marker-opt-wth-drop-opt-wthout: Subject dropping allowed for al verb types. Marker optional for both dropped and overt subjects. (`arg-opt-all-subj-drop-marker-opt-wth-drop-opt-wthout'): 8 items;
  arg-opt-all-subj-drop-marker-opt-wth-drop-req-wthout: Subject dropping allowed for all verb types. Marker opt for dropped subj and req for overt subj. (`arg-opt-all-subj-drop-marker-opt-wth-drop-req-wthout'): 8 items;
  arg-opt-all-subj-drop-marker-req-wth-drop-np-wthout: Subject dropping allowed for all verb types. Marker required for drop and not permitted with overt subj. (`arg-opt-all-subj-drop-marker-req-wth-drop-np-wthout'): 10 items;
  arg-opt-all-subj-drop-marker-req-wth-drop-opt-wthout: Subject dropping allowed for all verb types.  Marker req for drop and opt for overt subj. (`arg-opt-all-subj-drop-marker-req-wth-drop-opt-wthout'): 12 items;
  arg-opt-all-subj-drop-marker-req-wth-drop-req-wthout: Subject dropping for all verb types. Marker required for both dropped and overt subjects (`arg-opt-all-subj-drop-marker-req-wth-drop-req-wthout'): 12 items;
  arg-opt-lex-cntxt-2feat-subj-drop-marker-req-wth-drop-req-wthout: Subject dropping only in one context with multiple features.  One specified on the verb.  One on the subj. (`arg-opt-lex-cntxt-2feat-subj-drop-marker-req-wth-drop-req-wthout'): 42 items;
  arg-opt-lex-cntxt-subj-drop-marker-req-wth-drop-req-wthout: Subject dropping according to one context with one feature specified on the verb. (`arg-opt-lex-cntxt-subj-drop-marker-req-wth-drop-req-wthout'): 40 items;
  arg-opt-lex-comps-drop-marker-np-wth-drop-opt-wthout: Markers are not permitted if the object is dropped and optional if it is overt.  Lexically Ba[D[D[A[D (`arg-opt-lex-comps-drop-marker-np-wth-drop-opt-wthout'): 8 items;
  arg-opt-lex-comps-drop-marker-np-wth-drop-req-wthout: Marker not permitted with dropped object and required with an overt object. Lexically based. (`arg-opt-lex-comps-drop-marker-np-wth-drop-req-wthout'): 8 items;
  arg-opt-lex-comps-drop-marker-opt-wth-drop-np-wthout: markerop optional with dropped object and not permitted with overt object. lexically based (`arg-opt-lex-comps-drop-marker-opt-wth-drop-np-wthout'): 8 items;
  arg-opt-lex-comps-drop-marker-opt-wth-drop-opt-wthout: marker is optional for both dropped and overt objects.  lexically based (`arg-opt-lex-comps-drop-marker-opt-wth-drop-opt-wthout'): 8 items;
  arg-opt-lex-comps-drop-marker-opt-wth-drop-req-wthout: marker is optional with a dropped object and required with an overt object. lecixically based (`arg-opt-lex-comps-drop-marker-opt-wth-drop-req-wthout'): 8 items;
  arg-opt-lex-comps-drop-marker-req-wth-drop-np-wthout: marker is required wihen an object is dropped and not permitted with an overt object. lexically based (`arg-opt-lex-comps-drop-marker-req-wth-drop-np-wthout'): 12 items;
  arg-opt-lex-comps-drop-marker-req-wth-drop-opt-wthout: marker is required with an ovdropped object and optional with an overt object. lexically based (`arg-opt-lex-comps-drop-marker-req-wth-drop-opt-wthout'): 12 items;
  arg-opt-lex-comps-drop-marker-req-wth-drop-req-wthout: marker is required with a dropped object and required with an overt object. lexically based. (`arg-opt-lex-comps-drop-marker-req-wth-drop-req-wthout'): 12 items;
  arg-opt-lex-comps-drop-np-wth-drop-np-wthout: slexically based complement dropping.  marker is not permitted for dropped or overt objects (`arg-opt-lex-comps-drop-np-wth-drop-np-wthout'): 13 items;
  arg-opt-lex-subj-drop-marker-np-wth-drop-opt-wthout: subject dropping.lexically based. marker is not permitted when subject is dropped and is optional when it is overt (`arg-opt-lex-subj-drop-marker-np-wth-drop-opt-wthout'): 10 items;
  arg-opt-lex-subj-drop-marker-np-wth-drop-req-wthout: lexically based subject dropping. subject marker is re not permitted with an dropped subject and required with an overt subject. (`arg-opt-lex-subj-drop-marker-np-wth-drop-req-wthout'): 8 items;
  arg-opt-lex-subj-drop-marker-opt-wth-drop-np-wthout: lexically based subject dropping. maker is optional with drop and onot permitted with overt subject (`arg-opt-lex-subj-drop-marker-opt-wth-drop-np-wthout'): 8 items;
  arg-opt-lex-subj-drop-marker-opt-wth-drop-opt-wthout: lexically based subject drop. marker is optional witha dropped subject and optiona l with an overt subject (`arg-opt-lex-subj-drop-marker-opt-wth-drop-opt-wthout'): 8 items;
  arg-opt-lex-subj-drop-marker-opt-wth-drop-req-wthout: lexically based subject dropping. marker is required with a dropped subject and required with an overt subject (`arg-opt-lex-subj-drop-marker-opt-wth-drop-req-wthout'): 8 items;
  arg-opt-lex-subj-drop-marker-req-wth-drop-np-wthout: lexically based subject dropping. mmareker is required with a dropped subject and not permitted with an overt subject (`arg-opt-lex-subj-drop-marker-req-wth-drop-np-wthout'): 10 items;
  arg-opt-lex-subj-drop-marker-req-wth-drop-opt-wthout: lexically based subject dropping. marker is required for a dropped subject and optinal for a overt subject (`arg-opt-lex-subj-drop-marker-req-wth-drop-opt-wthout'): 12 items;
  arg-opt-lex-subj-drop-marker-req-wth-drop-req-wthout: Lexically based subject dropping. Marker required for dropped and overt subjs. (`arg-opt-lex-subj-drop-marker-req-wth-drop-req-wthout'): 38 items;
  arg-opt-lex-subj-drop-no-marker: Lexical based subject dropping. No marker. (`arg-opt-lex-subj-drop-no-marker'): 19 items;
  aux-f-vpcomp-nfconst-formfeat: finite auxes with nf vp compleof the nf comp is constrained - level 2 test (inflection, no t&a features) (`aux-f-vpcomp-nfconst-formfeat'): 16 items;
  aux-s-f-noinfl: two aux, finite sentential compelement, no inflection, level1 test (`aux-s-f-noinfl'): 8 items;
  aux-v-f-noinfl: two aux, finite v vomp, no inflection, level 1 test (`aux-v-f-noinfl'): 8 items;
  aux-vp-f-noinfl: two aux, finite vp comp, no inflection, level 1 test (`aux-vp-f-noinfl'): 8 items;
  auxcomp-feature-engstative-vp-1013: testing verb class feature stative and aux constrained to nonstative (`auxcomp-feature-engstative-vp-1013'): 4 items;
  auxcomp-markfeature-vp-1015: testing KEYS.KEY mhat is being used to distinguish etre and avoir type auxiliary verb classes (`auxcomp-markfeature-vp-1015'): 4 items;
  auxfeatures: testing features on auxiliary verb (`auxfeatures'): 14 items;
  auxfeatures-onlyformmarked: testing features on the auxiliaryFORM marked on the complement verb (`auxfeatures-onlyformmarked'): 6 items;
  auxten-vpcompnfasp-tafeat: tensed auxilialevel 3 test (`auxten-vpcompnfasp-tafeat'): 17 items;
  case-fluid-s: Case, fluid-S (`case-fluid-s'): 17 items;
  case-focus: Case, focus (`case-focus'): 56 items;
  case-nom-acc-adp: Case, nominative-accusative w/ adpositions (`case-nom-acc-adp'): 13 items;
  case-none: Case, none (`case-none'): 5 items;
  case-optadp: case with optional adpositional marking (`case-optadp'): 14 items;
  case-split-s: Case, split-S (`case-split-s'): 15 items;
  case-tripartite: Case, tripartite (`case-tripartite'): 20 items;
  compfeatures: testing features on the auxiliary complement (`compfeatures'): 20 items;
  compfeatures-onlyformmarked: testing features on auxiliary complement but only FORM is marked on the verb (`compfeatures-onlyformmarked'): 6 items;
  eng-qpart-inf: Testing interaction of non-finite form and question particle.  Question particle should now only attach to finite sentences. (`eng-qpart-inf'): 5 items;
  fin-forms-noaux-1008: testing finite/nonfinite distinction when there are no auxiliaries (`fin-forms-noaux-1008'): 5 items;
  infl-neg-final-opt-suffix: Negative affix as optional suffix at end of suffix string (`infl-neg-final-opt-suffix'): 8 items;
  infl-neg-nonfinal-suffix: Inflectional negation as optional non-final suffix, optionality with check box (`infl-neg-nonfinal-suffix'): 6 items;
  infl-neg-sole-suffix: Negation as the only suffix, optional (`infl-neg-sole-suffix'): 5 items;
  infl-q-aux-verb: Questions as inflection on aux verbs. (`infl-q-aux-verb'): 10 items;
  infl-q-final-opt-suffix: Question inflection as optional suffix after one other suffix (`infl-q-final-opt-suffix'): 8 items;
  infl-q-main-verb: Question marking as inflection on the main verb, no other affixes (`infl-q-main-verb'): 4 items;
  infl-q-main-verb-prefix: Questions as prefix on main verbs. (`infl-q-main-verb-prefix'): 6 items;
  infl-q-nonfinal-suffix: Question affix as non-final in suffix string. (`infl-q-nonfinal-suffix'): 6 items;
  Lexical subject dropping with no marker.  No object dropping (`lex-subj-drop'): 19 items;
  mini-infl-neg: Negation as inflection, simple case (`mini-infl-neg'): 5 items;
  multi-featured-aux: very! short test of features on the auxiliary itself (`multi-featured-aux'): 3 items;
  multi-select-case: multi-select of feature values, namely case (`multi-select-case'): 30 items;
  nf-form-withaux-vp-1008: testing nonfinite form constraint for aux complement (`nf-form-withaux-vp-1008'): 4 items;
  nf-twoforms-withtwoaux-vp-1008: testing-- two nonfinite forms (`nf-twoforms-withtwoaux-vp-1008'): 6 items;
  noaux-toblig-aopt-onv: obligatory tense, optional aspect on v, no aux level 3 test (`noaux-toblig-aopt-onv'): 6 items;
  nopaux-noinfl-vpcomp-f-formfeat: single uninflected aux with finite vp complement, level 2 test (inflection but no t&a features) (`nopaux-noinfl-vpcomp-f-formfeat'): 6 items;
  pre-vp-adv-neg: Negation as independent pre-VP modifier (`pre-vp-adv-neg'): 7 items;
  qpart-yes-no: Questions marked via sentence-initial question particle. (`qpart-yes-no'): 9 items;
  subj-aux-inv-q: Questions marked by subj-aux inversion. (`subj-aux-inv-q'): 6 items;
  All subjects caobjects can be dropped.  No markers for subject dropping. (`subj-drop'): 23 items;
  subj-v-inv-obj-drop: Testing interaction of subj-v inversion and object drop, as well as interaction of subj-v intersion and FORM and AUX features. (`subj-v-inv-obj-drop'): 15 items;
  test-stative: testing assignment of prog-asp to non-stative-ing comp, ignoring tense/person/number/spelling, only transitive (`test-stative'): 8 items;
  tiniest: A very basic grammar just to get the regression tests started.  SOV word order, no frills. (`tiniest'): 9 items;
  view-inf-situ-inher: inflected viewpoint and inherent situation aspect (`view-inf-situ-inher'): 9 items;
  view-situ-aspect-infl: situation and viewpoint aspect as inflection (`view-situ-aspect-infl'): 13 items;

NIL
TSNLP(6): "current/view-situ-aspect-infl"
TSNLP(7): 
tsdb(): database `home/antske/delphin/matrix/branches/antske/GermanicLanguageGenerator/gmcs/regression_tests/home/current/view-situ-aspect-infl' already exists.

NIL
TSNLP(8): ; Loading
;    /home/antske/delphin/matrix/branches/antske/GermanicLanguageGenerator/gmcs/regression_tests/grammars/view-situ-aspect-infl/view-situ-aspect-infl/lkb/script
;   Loading
;      /home/antske/delphin/matrix/branches/antske/GermanicLanguageGenerator/gmcs/regression_tests/grammars/view-situ-aspect-infl/view-situ-aspect-infl/Version.lsp
;   Loading
;      /home/antske/delphin/matrix/branches/antske/GermanicLanguageGenerator/gmcs/regression_tests/grammars/view-situ-aspect-infl/view-situ-aspect-infl/lkb/globals.lsp
;   Loading
;      /home/antske/delphin/matrix/branches/antske/GermanicLanguageGenerator/gmcs/regression_tests/grammars/view-situ-aspect-infl/view-situ-aspect-infl/lkb/user-fns.lsp

Reading in type file matrix
Reading in type file head-types
Reading in type file view-situ-aspect-infl
Checking type hierarchy
Checking for unique greatest lower bounds
Expanding constraints
Making constraints well formed
Expanding defaults
Type file checked successfully
Computing display ordering
Reading in lexical entry file lexicon
Reading in rules file rules
Reading in lexical rules file lrules
Reading in lexical rules file irules
Reading in root file roots
Reading in parse node file labels
;   Loading
;      /home/antske/delphin/matrix/branches/antske/GermanicLanguageGenerator/gmcs/regression_tests/grammars/view-situ-aspect-infl/view-situ-aspect-infl/lkb/mrsglobals.lisp

 (recompiling semantic indices)
Indexing complete
;   Loading
;      /home/antske/delphin/matrix/branches/antske/GermanicLanguageGenerator/gmcs/regression_tests/grammars/view-situ-aspect-infl/view-situ-aspect-infl/lkb/mt.lsp

Building rule filter
Building lr connections table
Grammar input complete
NIL
TSNLP(9): 
retrieve(): found 13 items (0 output specifications).
create-cache(): write-through mode for `current/view-situ-aspect-infl'.
largest-run-id(): largest `run-id' is 0.
largest-parse-id(): largest `parse-id' (for `run' 1) is 0.
install-gc-strategy(): disabling tenure; global garbage collection ... done.
(1) `n1 ivimpsitu1' [100000] --- 1 (0.01|0.01:0.01 s) <2:8> {12:4} (74.0K 2.9M = 3.0M) [0].
(2) `n1 ivimpsitu2' [100000] --- 1 (0.00|0.00:0.00 s) <2:8> {12:4} (56.9K 1.7M = 1.7M) [0].
(3) `n1 ivperfsitu1' [100000] --- 1 (0.00|0.00:0.00 s) <2:8> {12:4} (57.0K 1.7M = 1.7M) [0].
(4) `n1 ivperfsitu2' [100000] --- 1 (0.00|0.00:0.00 s) <2:8> {12:4} (56.8K 1.7M = 1.7M) [0].
(5) `n1 ivimp' [100000] --- 1 (0.00|0.00:0.00 s) <2:7> {10:3} (46.2K 1.5M = 1.6M) [0].
(6) `n1 ivperf' [100000] --- 1 (0.00|0.00:0.00 s) <2:7> {10:3} (46.3K 1.5M = 1.6M) [0].
(7) `*n1 ivsitu1' [100000] --- (0.00|0.00 s) <2:6> {10:2} (37.7K 1.5M = 1.6M) [0].
(8) `*n1 ivsitu2' [100000] --- (0.00|0.00 s) <2:6> {10:2} (37.6K 1.5M = 1.6M) [0].
(9) `*n1 ivsitu1imp' [100000] --- error: No analysis found corresponding to token 1-2 IVSITU1IMP.
(10) `*n1 ivimpsitu1situ2' [100000] --- error: No analysis found corresponding to token 1-2 IVIMPSITU1SITU2.
(11) `*n1 ivimpperf' [100000] --- error: No analysis found corresponding to token 1-2 IVIMPPERF.
(12) `*n1 ivperfimp' [100000] --- error: No analysis found corresponding to token 1-2 IVPERFIMP.
(13) `*n1 ivperfsitu1situ2' [100000] --- error: No analysis found corresponding to token 1-2 IVPERFSITU1SITU2.
flush-cache(): flushing `current/view-situ-aspect-infl' cache ... done.
close-connection(): `current/view-situ-aspect-infl' expiry.
NIL
TSNLP(10): T
TSNLP(11): EOF
Really exit lisp [n]? 
close-connection(): `gold/view-situ-aspect-infl' expiry.
close-connection(): `current/view-situ-aspect-infl' expiry.
