;;; -*- Mode: TDL; Coding: utf-8 -*-
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; Grammar of ccomp-pseudo47-2-vin
;;; created at:
;;;     Thu Dec 28 23:53:18 UTC 2017
;;; based on Matrix customization system version of:
;;;     Thu Dec 28 23:52:27 UTC 2017
;;;
;;; 
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; Type assigning empty mod list. Added to basic types for nouns, verbs and determiners.

non-mod-lex-item := lex-item &
  [ SYNSEM.LOCAL.CAT.HEAD.MOD < > ].

;;;;;;;;;;;;;;;;;;;;;;;;;
;;; Matrix Type Addenda
;;;;;;;;;;;;;;;;;;;;;;;;;

basic-head-comp-phrase :+ [ SYNSEM.LOCAL.CAT.MC #mc,
    HEAD-DTR.SYNSEM.LOCAL.CAT.MC #mc ].

basic-head-opt-subj-phrase :+ [ HEAD-DTR.SYNSEM.LOCAL.CAT.VAL.COMPS < > ].

+nvcdmo :+ [ MOD < > ].

head :+ [ INIT bool,
    EXTRA bool ].

;;;;;;;;;;;;;;;;;;;
;;; Lexical Types
;;;;;;;;;;;;;;;;;;;

;;; Nouns

noun-lex := basic-noun-lex & basic-one-arg & no-hcons-lex-item & non-mod-lex-item &
  [ ARG-ST < #spr >,
    SYNSEM.LOCAL.CAT.VAL [ COMPS < >,
                           SUBJ < >,
                           SPEC < >,
                           SPR < #spr &
                                 [ LOCAL.CAT.HEAD det,
                                   OPT + ] > ] ].

noun-noun-lex := noun-lex.

;;; Verbs

verb-lex := basic-verb-lex & non-mod-lex-item &
  [ SYNSEM.LOCAL [ CAT.VAL [ SPR < >,
                             SPEC < >,
                             SUBJ < #subj > ],
                   CONT.HOOK.XARG #xarg ],
    ARG-ST.FIRST #subj &
                 [ LOCAL [ CAT cat-sat &
                               [ VAL [ SPR < >,
                                       COMPS < > ] ],
                           CONT.HOOK.INDEX #xarg ] ] ].

intransitive-verb-lex := verb-lex & intransitive-lex-item &
  [ SYNSEM.LOCAL.CAT.VAL.COMPS < >,
    ARG-ST.FIRST.LOCAL.CAT.HEAD noun ].

transitive-verb-lex := verb-lex & transitive-lex-item &
  [ ARG-ST < [ LOCAL.CAT.HEAD noun ],
             #comps &
             [ LOCAL.CAT cat-sat &
                         [ VAL [ SPR < >,
                                 COMPS < > ],
                           HEAD noun ] ] >,
    SYNSEM.LOCAL.CAT.VAL.COMPS < #comps &
                                 [ LOCAL.CAT.HEAD.EXTRA - ] > ].

clausalcomp-verb-lex := verb-lex &
  [ SYNSEM.LOCAL.CAT.VAL.COMPS < #comps >,
    ARG-ST < [ LOCAL.CAT.HEAD noun ],
             #comps &
             [ LOCAL.CAT.VAL [ SPR < >,
                               COMPS < >,
                               SUBJ < > ] ] > ].

tverb-verb-lex := transitive-verb-lex.

cverb-nonextra-comps1-verb-lex := clausalcomp-verb-lex & clausal-second-arg-trans-lex-item &
  [ SYNSEM.LOCAL.CAT.VAL.COMPS < [ LOCAL.CAT.HEAD comp &
                                                  [ EXTRA - ] ] > ].

cverb-extra-comps2-verb-lex := clausalcomp-verb-lex & clausal-second-arg-trans-lex-item &
  [ SYNSEM.LOCAL.CAT.VAL.COMPS < [ LOCAL.CAT.HEAD +vc &
                                                  [ EXTRA + ] ] > ].

;;; Complementizers

comp-lex-item := raise-sem-lex-item & basic-one-arg &
  [ SYNSEM.LOCAL.CAT [ HEAD comp &
                            [ MOD < > ],
                       VAL [ SPR < >,
                             SUBJ < >,
                             COMPS < #comps > ] ],
    ARG-ST < #comps &
             [ LOCAL.CAT [ HEAD verb,
                           MC -,
                           VAL [ SUBJ < >,
                                 COMPS < > ] ] ] > ].

comps1-comp-lex-item := comp-lex-item &
  [ SYNSEM.LOCAL.CAT.VAL.COMPS < [ LOCAL.CAT.HEAD.EXTRA - ] > ].

comps2-comp-lex-item := comp-lex-item &
  [ SYNSEM.LOCAL.CAT.VAL.COMPS < [ LOCAL.CAT.HEAD.EXTRA + ] > ].

;;;;;;;;;;;;;;;;;;;
;;; Lexical Rules
;;;;;;;;;;;;;;;;;;;

;;; Lexical rule types

;;;;;;;;;;;;;;;;;;;
;;; Phrasal Types
;;;;;;;;;;;;;;;;;;;

;Constraint on MC used to be part of matrix.tdl
;;it applies to all wo implementations, except for v2

head-comp-phrase := basic-head-1st-comp-phrase & head-initial &
  [ NON-HEAD-DTR.SYNSEM.LOCAL.CAT.HEAD.EXTRA - ].

head-subj-phrase := decl-head-subj-phrase & head-initial.

; Bare NP phrase.  Consider modifying the PRED value of the quantifier relation
; introduced to match the semantic effect of bare NPs in your language.

bare-np-phrase := basic-bare-np-phrase &
  [ C-CONT.RELS <! [ PRED "exist_q_rel" ] !> ].

head-comp-ccomp-phrase := basic-head-1st-comp-phrase & head-initial &
  [ HEAD-DTR.SYNSEM.LOCAL.CAT [ HEAD +vc,
                                VAL.SUBJ < > ],
    NON-HEAD-DTR.SYNSEM.LOCAL.CAT.HEAD.EXTRA + ].
