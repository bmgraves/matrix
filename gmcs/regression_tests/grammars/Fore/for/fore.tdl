;;; -*- Mode: TDL; Coding: utf-8 -*-
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;; Grammar of Fore
;;; created at:
;;;     Wed Jan 24 04:50:14 UTC 2018
;;; based on Matrix customization system version of:
;;;     unknown time
;;;
;;; 
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; Type assigning empty mod list. Added to basic types for nouns, verbs and determiners.

non-mod-lex-item := lex-item &
  [ SYNSEM.LOCAL.CAT.HEAD.MOD < > ].

;;;;;;;;;;;;;;;;;;;;;;;;;
;;; Matrix Type Addenda
;;;;;;;;;;;;;;;;;;;;;;;;;

noun :+ [ CASE case ].

verb :+ [ DIRECTION direction ].

inflected :+ [ CASE-FLAG luk,
    DIRECTION-FLAG luk,
    VERB2-DIR-INV-FLAG luk ].

infl-satisfied :+ [ CASE-FLAG na-or-+,
    DIRECTION-FLAG na-or-+,
    VERB2-DIR-INV-FLAG na-or-+ ].

png :+ [ GEND gender ].

head :+ [ NTYPE ntype ].

basic-head-comp-phrase :+ [ SYNSEM.LOCAL.CAT.MC #mc,
    HEAD-DTR.SYNSEM.LOCAL.CAT.MC #mc ].

basic-head-opt-subj-phrase :+ [ HEAD-DTR.SYNSEM.LOCAL.CAT.VAL.COMPS < > ].

;;;;;;;;;;;;;;
;;; Features
;;;;;;;;;;;;;;

;;; Direction

direction := *top*.
dir := direction.
inv := direction.

;;; Case

case := *top*.
erg := case.  ; ergative
nom := case.  ; nominative

;;; Gender

gender := *top*.
human := gender.
non-human := gender.
animate := non-human.
inanimate := non-human.

;;; Ntype

ntype := *top*.
non-common := ntype.
pronoun := non-common.
name := non-common.
kin := non-common.
common := ntype.

;;;;;;;;;;;;;;;;;;;;
;;; Direct-Inverse
;;;;;;;;;;;;;;;;;;;;

;;; Direct-inverse scale

dir-inv-scale := canonical-synsem.

dir-inv-1 := dir-inv-scale &
  [ LOCAL.CAT.HEAD.NTYPE non-common ].

dir-inv-non-1 := dir-inv-scale &
  [ LOCAL.CAT.HEAD.NTYPE common ].

dir-inv-2 := dir-inv-non-1 &
  [ LOCAL [ CONT.HOOK.INDEX.PNG.GEND human,
            CAT.HEAD.NTYPE common ] ].

dir-inv-non-2 := dir-inv-non-1 &
  [ LOCAL [ CONT.HOOK.INDEX.PNG.GEND non-human,
            CAT.HEAD.NTYPE common ] ].

dir-inv-3 := dir-inv-non-2 &
  [ LOCAL [ CONT.HOOK.INDEX.PNG.GEND animate,
            CAT.HEAD.NTYPE common ] ].

dir-inv-non-3 := dir-inv-non-2 &
  [ LOCAL [ CONT.HOOK.INDEX.PNG.GEND inanimate,
            CAT.HEAD.NTYPE common ] ].

;;; Direct-inverse/unexpressed subtypes for compatibility with argument optionality

dir-inv-1-unexpressed := dir-inv-1 & unexpressed.

dir-inv-2-unexpressed := dir-inv-2 & unexpressed.

dir-inv-3-unexpressed := dir-inv-3 & unexpressed.

dir-inv-non-3-unexpressed := dir-inv-non-3 & unexpressed.

;;; Direct-inverse lexical rules

dir-lex-rule := add-only-no-ccont-rule &
  [ SYNSEM.LOCAL.CAT.HEAD.DIRECTION dir ].

inv-lex-rule := add-only-no-ccont-rule &
  [ SYNSEM.LOCAL.CAT.HEAD.DIRECTION inv ].

verb2-dir-inv-lex-rule-super := add-only-no-ccont-rule & const-lex-rule & direction-rule-dtr &
  [ INFLECTED [ VERB2-DIR-INV-FLAG +,
                CASE-FLAG #case,
                DIRECTION-FLAG #direction ],
    DTR verb2-verb-lex &
        [ INFLECTED [ CASE-FLAG #case,
                      DIRECTION-FLAG #direction ] ] ].

verb2-dir-lex-rule := verb2-dir-inv-lex-rule-super & dir-lex-rule.

verb2-dir-1-lex-rule := verb2-dir-lex-rule &
  [ SYNSEM.LOCAL.CAT.VAL [ SUBJ < dir-inv-1 >,
                           COMPS < dir-inv-scale > ] ].

verb2-dir-2-lex-rule := verb2-dir-lex-rule &
  [ SYNSEM.LOCAL.CAT.VAL [ SUBJ < dir-inv-2 >,
                           COMPS < dir-inv-non-1 > ] ].

verb2-dir-3-lex-rule := verb2-dir-lex-rule &
  [ SYNSEM.LOCAL.CAT.VAL [ SUBJ < dir-inv-3 >,
                           COMPS < dir-inv-non-2 > ] ].

verb2-dir-4-lex-rule := verb2-dir-lex-rule &
  [ SYNSEM.LOCAL.CAT.VAL [ SUBJ < dir-inv-non-3 >,
                           COMPS < dir-inv-non-3 > ] ].

verb2-inv-lex-rule := verb2-dir-inv-lex-rule-super & inv-lex-rule.

verb2-inv-1-lex-rule := verb2-inv-lex-rule &
  [ SYNSEM.LOCAL.CAT.VAL [ SUBJ < dir-inv-non-1 >,
                           COMPS < dir-inv-1 > ] ].

verb2-inv-2-lex-rule := verb2-inv-lex-rule &
  [ SYNSEM.LOCAL.CAT.VAL [ SUBJ < dir-inv-non-2 >,
                           COMPS < dir-inv-2 > ] ].

verb2-inv-3-lex-rule := verb2-inv-lex-rule &
  [ SYNSEM.LOCAL.CAT.VAL [ SUBJ < dir-inv-non-3 >,
                           COMPS < dir-inv-3 > ] ].

;;;;;;;;;;;;;;;;;;;
;;; Lexical Types
;;;;;;;;;;;;;;;;;;;

;;; Nouns

noun-lex := basic-noun-lex & basic-one-arg & no-hcons-lex-item & non-mod-lex-item &
  [ ARG-ST < #spr >,
    SYNSEM.LOCAL.CAT.VAL [ COMPS < >,
                           SUBJ < >,
                           SPEC < >,
                           SPR < #spr &
                                 [ LOCAL.CAT.HEAD det,
                                   OPT + ] > ],
    INFLECTED.CASE-FLAG - ].

noun1-noun-lex := noun-lex &
  [ SYNSEM.LOCAL [ CAT.HEAD.NTYPE pronoun,
                   CONT.HOOK.INDEX.PNG.GEND human ] ].

noun2-noun-lex := noun-lex &
  [ SYNSEM.LOCAL [ CAT.HEAD.NTYPE kin,
                   CONT.HOOK.INDEX.PNG.GEND human ] ].

noun3-noun-lex := noun-lex &
  [ SYNSEM.LOCAL [ CAT.HEAD.NTYPE name,
                   CONT.HOOK.INDEX.PNG.GEND human ] ].

noun4-noun-lex := noun-lex &
  [ SYNSEM.LOCAL [ CAT.HEAD.NTYPE common,
                   CONT.HOOK.INDEX.PNG.GEND human ] ].

noun5-noun-lex := noun-lex &
  [ SYNSEM.LOCAL [ CAT.HEAD.NTYPE common,
                   CONT.HOOK.INDEX.PNG.GEND animate ] ].

noun6-noun-lex := noun-lex &
  [ SYNSEM.LOCAL [ CAT.HEAD.NTYPE common,
                   CONT.HOOK.INDEX.PNG.GEND inanimate ] ].

;;; Verbs

verb-lex := basic-verb-lex & non-mod-lex-item &
  [ SYNSEM.LOCAL [ CAT.VAL [ SPR < >,
                             SPEC < >,
                             SUBJ < #subj > ],
                   CONT.HOOK.XARG #xarg ],
    ARG-ST.FIRST #subj &
                 [ LOCAL [ CAT cat-sat &
                               [ VAL [ SPR < >,
                                       COMPS < > ] ],
                           CONT.HOOK.INDEX #xarg ] ] ].

intransitive-verb-lex := verb-lex & intransitive-lex-item &
  [ SYNSEM.LOCAL.CAT.VAL.COMPS < >,
    ARG-ST.FIRST.LOCAL.CAT.HEAD noun ].

transitive-verb-lex := verb-lex & transitive-lex-item &
  [ SYNSEM.LOCAL.CAT.VAL.COMPS < #comps >,
    ARG-ST < [ LOCAL.CAT.HEAD noun ],
             #comps &
             [ LOCAL.CAT cat-sat &
                         [ VAL [ SPR < >,
                                 COMPS < > ],
                           HEAD noun ] ] > ].

nom-intransitive-verb-lex := intransitive-verb-lex &
  [ ARG-ST.FIRST.LOCAL.CAT.HEAD noun &
                                [ CASE nom ] ].

erg-nom-transitive-verb-lex := transitive-verb-lex &
  [ ARG-ST < [ LOCAL.CAT.HEAD noun &
                              [ CASE erg ] ],
             [ LOCAL.CAT.HEAD noun &
                              [ CASE nom ] ] > ].

dir-inv-erg-nom-transitive-verb-lex := transitive-verb-lex &
  [ ARG-ST < [ LOCAL.CAT.HEAD noun &
                              [ CASE erg ] ],
             [ LOCAL.CAT.HEAD noun &
                              [ CASE nom ] ] > ].

dir-inv-transitive-verb-lex := transitive-verb-lex &
  [ ARG-ST < [ LOCAL.CAT.HEAD noun ],
             [ LOCAL.CAT.HEAD noun ] > ].

verb1-verb-lex := nom-intransitive-verb-lex.

verb2-verb-lex := dir-inv-transitive-verb-lex & direction-rule-dtr &
  [ INFLECTED [ DIRECTION-FLAG -,
                VERB2-DIR-INV-FLAG - ] ].

;;; Complementizers

;;;;;;;;;;;;;;;;;;;
;;; Lexical Rules
;;;;;;;;;;;;;;;;;;;

;;; Intermediate rule types

direction-rule-dtr := word-or-lexrule.

;;; Lexical rule types

case-lex-rule-super := add-only-no-ccont-rule &
  [ INFLECTED [ CASE-FLAG +,
                DIRECTION-FLAG #direction,
                VERB2-DIR-INV-FLAG #verb2-dir-inv ],
    DTR noun-lex &
        [ INFLECTED [ DIRECTION-FLAG #direction,
                      VERB2-DIR-INV-FLAG #verb2-dir-inv ] ] ].

case_lrt1-lex-rule := case-lex-rule-super & infl-lex-rule &
  [ SYNSEM.LOCAL [ CAT.HEAD.CASE erg,
                   CONT.HOOK.INDEX.PNG.GEND human ] ].

case_lrt2-lex-rule := case-lex-rule-super & infl-lex-rule &
  [ SYNSEM.LOCAL [ CAT.HEAD.CASE erg,
                   CONT.HOOK.INDEX.PNG.GEND non-human ] ].

case_lrt3-lex-rule := case-lex-rule-super & const-lex-rule &
  [ SYNSEM.LOCAL.CAT.HEAD.CASE nom ].

direction-lex-rule-super := add-only-no-ccont-rule & const-lex-rule &
  [ INFLECTED [ DIRECTION-FLAG +,
                CASE-FLAG #case,
                VERB2-DIR-INV-FLAG #verb2-dir-inv ],
    DTR direction-rule-dtr &
        [ INFLECTED [ CASE-FLAG #case,
                      VERB2-DIR-INV-FLAG #verb2-dir-inv ] ] ].

direct-lex-rule := direction-lex-rule-super & dir-lex-rule &
  [ SYNSEM.LOCAL.CAT.VAL [ SUBJ.FIRST.LOCAL.CAT.HEAD.CASE nom,
                           COMPS.FIRST.LOCAL.CAT.HEAD.CASE nom ] ].

inverse-lex-rule := direction-lex-rule-super & inv-lex-rule &
  [ SYNSEM.LOCAL.CAT.VAL [ SUBJ.FIRST.LOCAL.CAT.HEAD.CASE erg,
                           COMPS.FIRST.LOCAL.CAT.HEAD.CASE nom ] ].

;;;;;;;;;;;;;;;;;;;
;;; Phrasal Types
;;;;;;;;;;;;;;;;;;;

;Constraint on MC used to be part of matrix.tdl
;;it applies to all wo implementations, except for v2

comp-head-phrase := basic-head-1st-comp-phrase & head-final.

subj-head-phrase := decl-head-subj-phrase & head-final.

; Bare NP phrase.  Consider modifying the PRED value of the quantifier relation
; introduced to match the semantic effect of bare NPs in your language.

bare-np-phrase := basic-bare-np-phrase &
  [ C-CONT.RELS <! [ PRED "exist_q_rel" ] !> ].
