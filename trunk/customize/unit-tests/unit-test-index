tiniest=very basic grammar to get the unit tests started - SOV word order, no frills
testingcompforms=small ts - known problems
case-erg-abs=Case, ergative-absolutive
case-fluid-s=Case, fluid-S
case-focus=Case, focus
case-nom-acc=Case, nominative-accusative
case-nom-acc-adp=Case, nominative-accusative w/ adpositions
case-none=Case, none
case-split-n=Case, split-N
case-split-s=Case, split-S
case-split-v=Case, split-V
case-tripartite=Case, tripartite
dir-inv-algonquian=Direct-inverse, pseudo-Algonquian
dir-inv-fore=Direct-inverse, pseudo-Fore
aux-s-f-noinfl=two aux, finite sentential compelement, no inflection, level1 test
aux-vp-f-noinfl=two aux, finite vp comp, no inflection, level 1 test
aux-v-f-noinfl=two aux, finite v vomp, no inflection, level 1 test
aux-f-vpcomp-nfconst-formfeat=finite auxes with nf vp compleof the nf comp is constrained - level 2 test (inflection, no t&a features)
nopaux-noinfl-vpcomp-f-formfeat=single uninflected aux with finite vp complement, level 2 test (inflection but no t&a features)
auxten-vpcompnfasp-tafeat=tensed auxilialevel 3 test
noaux-toblig-aopt-onv=obligatory tense, optional aspect on v, no aux level 3 test
auxcomp-feature-engstative-vp-1013=testing verb class feature stative and aux constrained to nonstative
auxcomp-markfeature-vp-1015=testing KEYS.KEY mhat is being used to distinguish etre and avoir type auxiliary verb classes
fin-forms-noaux-1008=testing finite/nonfinite distinction when there are no auxiliaries
nf-form-withaux-vp-1008=testing nonfinite form constraint for aux complement
nf-twoforms-withtwoaux-vp-1008=testing-- two nonfinite forms
multi-select-case=multi-select of feature values, namely case
v2-aux-eitherside-v=v2nd word order with one auxiliary that takes a v (not vp) complement which can appear freely on either side ofthe aux
v2-aux-eitherside-vp=v2nd word order with one auxiliary that takes a vp complement on either side
vos-vp-aux-case-rais=testing case constraints imposed by the auxiliary: here it raises the case value from its vcomp's subject
aux-assigns-subj-case-vp=grammar tests case restrictions imposed by auxiliary: here the auxiliary aentence
ovs-aux-after-vp=testing ovs word order with auxiliaries that follow their vp complement
ovs-aux-before-vp=tests word order ovs with auxiliaries that precede their vp complement
vos-aux-before-vp=testing word order for vos languages with auxiliaries preceding their vp complement
vos-aux-after-vp=testing word order for vos languages in which the auxiliary follows its vp complement
free-aux-after-vp=testing word order with auxiliaries following their vp-compl, else free word order
free-aux-before-vp=testing free word order with auxiliary that needs to come before its verbal complements
multi-featured-aux=very! short test of features on the auxiliary itself
vso-aux-before-vp=testing vso word order where auxiliary precedes main-verb and takes vso complement style Irish and Welsh
free-aux-after-v-cluster=testing free word order where the aux follows its vcomp and forms verbal clusters
free-aux-before-v-cluster="testing free word order with preceding auxiliaries that take a v-comp and form a v-cluster"
sov-aux-after-v="testing sov word order where auxiliaries precede v-comp"
sov-aux-before-v="testing sov word order with auxiliaries preceding their v-comp"
svo-aux-after-v="testing svo word order with aux following its v-complement"
svo-aux-before-v="testing svo word order with auxiliary preceding v-comp"
v-initial-aux-after-vp="testing v-initial word order with auxiliaries following their vp-complement"
v-initial-aux-before-vp="testing v-initial word order where the auxiliary precedes its vp complement"
v-initial-aux-after-v="testing v-initial word order when the auxiliary follows its v-complement"
v-initial-aux-before-v="testing v-initial word order with aux preceding its v-complement"
vso-aux-after-v="testing vso word order where the auxiliary follows its v-complement"
vso-aux-before-v-cluster="testing vso word order where the aux precedes its v-comp forming a verbal cluster"
vso-aux-before-v-no-cluster="test vso word order where aux precedes its v-complement and does not form a verbal cluster"
free-one-aux-max-v=tests free word order with no verbal clusters, thus maximum one aux
view-inf-situ-inher=inflected viewpoint and inherent situation aspect
view-situ-aspect-infl=situation and viewpoint aspect as inflection
test-stative=testing assignment of prog-asp to non-stative-ing comp, ignoring tense/person/number/spelling, only transitive
mini-infl-neg=Negation as inflection, simple case
pre-vp-adv-neg=Negation as independent pre-VP modifier
Zulu=Zulu test for morphotactics
Slave=Slave test for morphotactics
Finnish=Finnish test for morphotactics
case-mixed=case, mixed adpositional and morphological marking
case-mixed-optadp=case with mixed optional adpositional and morphological marking
case-optadp=case with optional adpositional marking
auxfeatures=testing features on auxiliary verb
compfeatures=testing features on the auxiliary complement
compfeatures-onlyformmarked=testing features on auxiliary complement but only FORM is marked on the verb
auxfeatures-onlyformmarked=testing features on the auxiliaryFORM marked on the complement verb
subj-drop=All subjects caobjects can be dropped.  No markers for subject dropping.
lex-subj-drop=Lexical subject dropping with no marker.  No object dropping
all-subj-drop-wth-req-marker=All subject droppiuired marker for both dropped and overt subjects.  No object dropping.
all-subj-drop-wth-opt-marker=Subject dropping for all verbs with a marker left optionally for both dropped and overt subjects
arg-opt-all-comps-drop-wth-no-marker=All complements can be dropped. No marker.
arg-opt-all-comps-drop-marker-req-wth-drop-opt-wthout="Object dropping allowed for all verbs.  Marker is required for dropping and optional otherwise."
