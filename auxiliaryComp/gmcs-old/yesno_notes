inversion:

Lexical rule makes ARG0.MESG ques.  In a lexical rule, we have access to
the actual ARG0, so can change this feature without losing anything else.
Probably need to explicitly relink ARG0 and INDEX.

Expletive auxes copy event variable of complement.  Need to relink that too?

Contentful auxes should require INDEX.MESG prop

intonation:

Actually have everything start off as prop-or-ques.  This makes the
above easier, because the lex rule just have to constrain down to
ques.  Likewise declarative complementizers and embedding verbs and
modifier-buildling or licensing constructions could constrain down to
prop.  What about imperatives, though?  That suggests the need for a
junk slot that records what the MESG value is going to be, and then
selecting environments (embedded verbs, root conditions, modifier
constructions) identifying MESG with junk slot.

*** OR *** Two root conditions: One requires prop-or-ques, the
other identifies commands through some diacritic feature and requires
command.  So, basically still a junk slot.  Which is better?  Might
be able to reuse e.g., FORM for purposes of identifying commands, which
means that this option obviates need for extra feature. 

question particles:

Like complementizers.  Don't have their own event variable, just
pass up INDEX of complement.  Constrain MESG (or equiv. junk slot)
to be ques.


For purposes of NAACL 07 paper (NB: No clause-embedding verbs):

mesg has one immediate subtype prop_or_ques
prop and ques both inherit prop_or_ques
All verbs are INDEX.MESG prop_or_ques -- worry about other predicates
which introduce event-relations later

Intonation option does *nothing*

Inversion constrains INDEX.MESG to be ques
(contentful auxes was INDEX.MESG prop on their complements)

Assuming that all languages allow intonation questions, even if
they also have another strategy

Question particles: as above

No change to root condition.

